{"ast":null,"code":"import _slicedToArray from\"C:/Users/frith/Google Drive/Dev/assessment-sfm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useEffect}from\"react\";import Question from\"./Question\";import Answer from\"./Answer\";import Navigator from\"./Navigator\";import{useStateValue}from\"./StateProvider\";import{useHistory}from\"react-router-dom\";import ErrorOutlineIcon from\"@material-ui/icons/ErrorOutline\";import\"../css/Test.css\";function Test(_ref){var location=_ref.location;var _useStateValue=useStateValue(),_useStateValue2=_slicedToArray(_useStateValue,2),_useStateValue2$=_useStateValue2[0],test=_useStateValue2$.test,contactId=_useStateValue2$.contactId,dispatch=_useStateValue2[1];var history=useHistory();useEffect(function(){// Connect Session Storage With Test Type\nvar processTest=function processTest(){// Check if session contains Test\nif(sessionStorage.getItem(\"sessionTest\")){console.log(\"üîê Session Test: \",sessionStorage.getItem(\"sessionTest\"));dispatch({type:\"SET_TEST\",test:sessionStorage.getItem(\"sessionTest\")});}// Set Test From URL Params\nelse{var urlParams=new URLSearchParams(location.search);var test;// Process \"test\" Parameter\nif(urlParams.has(\"test\")){test=urlParams.get(\"test\");console.log(\"üîê Param Test: \",test);// Sfm Assessment\nif(test===\"sfm-assessment\"){sessionStorage.setItem(\"sessionTest\",test);}// Vault Assessment\nelse if(test===\"vault-assessment\"){sessionStorage.setItem(\"sessionTest\",test);}// Default\nelse{console.log(\"üîê Test param value not valid!\");}// Activate Test\ndispatch({type:\"SET_TEST\",test:sessionStorage.getItem(\"sessionTest\")});}else{console.log(\"üîê Test param was not found!\");}// Remove contactId From Params\nurlParams.delete(\"test\");history.replace({search:urlParams.toString()});}};// Connect Session Storage to IS ContactId\nvar processContactId=function processContactId(){// Declare variable\nvar contactId;// Check if session contains contactId\nif(sessionStorage.getItem(\"sessionContactId\")){dispatch({type:\"SET_CONTACT_ID\"});console.log(\"üîê ContactId Validated: \",sessionStorage.getItem(\"sessionContactId\"));}// Set contactId from URL params\nelse{// Fetch URL parameters\nvar urlParams=new URLSearchParams(location.search);if(urlParams.has(\"contactId\")){contactId=+urlParams.get(\"contactId\");// Validate contactId & process\nif(!isNaN(contactId)){// Set session storage\nsessionStorage.setItem(\"sessionContactId\",contactId);// Update DataLayer to validate session population\ndispatch({type:\"SET_CONTACT_ID\"});console.log(\"üîê contactId: \",contactId);}else{console.log(\"üîê contactId is NaN...\");}}else{console.log(\"üîê contactId param was not found!\");}}};// Connect Session Storage to Email\nvar processEmail=function processEmail(){// Declare variable\nvar email;// Check if session contains contactId\nif(sessionStorage.getItem(\"sessionEmail\")){console.log(\"üîê Email Validated: \",sessionStorage.getItem(\"sessionEmail\"));}else{// Fetch URL parameters\nvar urlParams=new URLSearchParams(location.search);if(urlParams.has(\"email\")){// Set email\nemail=urlParams.get(\"email\");console.log(\"üîê email: \",email);// Set session storage\nsessionStorage.setItem(\"sessionEmail\",email);}else{console.log(\"üîê Email param was not found!\");}}};// Remove URL Params\nvar processUrl=function processUrl(){// Fetch URL parameters\nvar urlParams=new URLSearchParams(location.search);if(urlParams.has(\"email\")){urlParams.delete(\"email\");}if(urlParams.has(\"contactId\")){urlParams.delete(\"contactId\");}if(urlParams.has(\"test\")){urlParams.delete(\"test\");}// Remove contactId From Params\nhistory.replace({search:urlParams.toString()});};processContactId();processEmail();processTest();processUrl();},[dispatch,history,location.search]);return/*#__PURE__*/_jsxs(\"div\",{className:\"test\",children:[!contactId&&/*#__PURE__*/_jsx(\"div\",{className:\"test-errorMissingID\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"test-errorMissingIDBox\",children:[/*#__PURE__*/_jsx(ErrorOutlineIcon,{}),/*#__PURE__*/_jsx(\"p\",{children:\"Your data will not be saved...\"}),/*#__PURE__*/_jsx(\"p\",{children:\"You can still take the assessment, but your data will not transfer to the vault.\"})]})}),test?/*#__PURE__*/_jsxs(\"div\",{className:\"test-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"test-header\",children:\"Questions\"}),/*#__PURE__*/_jsx(Question,{}),/*#__PURE__*/_jsx(Answer,{}),/*#__PURE__*/_jsx(Navigator,{})]}):/*#__PURE__*/_jsx(\"div\",{className:\"test-errorMissingTest\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"test-errorMissingTestBox\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Pick Your Assessment\"}),/*#__PURE__*/_jsx(\"p\",{children:\"If you are not a SFM Member, please click take the Vault Assessment...\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"test-errorMissingTestButtons\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"?test=sfm-assessment\",children:/*#__PURE__*/_jsx(\"button\",{children:\"SFM Assessment\"})}),/*#__PURE__*/_jsx(\"a\",{href:\"?test=vault-assessment\",children:/*#__PURE__*/_jsx(\"button\",{children:\"Vault Assessment\"})})]})]})})]});}export default Test;","map":{"version":3,"sources":["C:/Users/frith/Google Drive/Dev/assessment-sfm/src/components/Test.js"],"names":["React","useEffect","Question","Answer","Navigator","useStateValue","useHistory","ErrorOutlineIcon","Test","location","test","contactId","dispatch","history","processTest","sessionStorage","getItem","console","log","type","urlParams","URLSearchParams","search","has","get","setItem","delete","replace","toString","processContactId","isNaN","processEmail","email","processUrl"],"mappings":"6PAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,OAASC,aAAT,KAA8B,iBAA9B,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,iCAA7B,CACA,MAAO,iBAAP,CAEA,QAASC,CAAAA,IAAT,MAA4B,IAAZC,CAAAA,QAAY,MAAZA,QAAY,oBACcJ,aAAa,EAD3B,sFACjBK,IADiB,kBACjBA,IADiB,CACXC,SADW,kBACXA,SADW,CACEC,QADF,oBAE1B,GAAMC,CAAAA,OAAO,CAAGP,UAAU,EAA1B,CAEAL,SAAS,CAAC,UAAM,CACd;AACA,GAAMa,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB;AACA,GAAIC,cAAc,CAACC,OAAf,CAAuB,aAAvB,CAAJ,CAA2C,CACzCC,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAiCH,cAAc,CAACC,OAAf,CAAuB,aAAvB,CAAjC,EACAJ,QAAQ,CAAC,CACPO,IAAI,CAAE,UADC,CAEPT,IAAI,CAAEK,cAAc,CAACC,OAAf,CAAuB,aAAvB,CAFC,CAAD,CAAR,CAID,CAED;AARA,IASK,CACH,GAAMI,CAAAA,SAAS,CAAG,GAAIC,CAAAA,eAAJ,CAAoBZ,QAAQ,CAACa,MAA7B,CAAlB,CACA,GAAIZ,CAAAA,IAAJ,CAEA;AACA,GAAIU,SAAS,CAACG,GAAV,CAAc,MAAd,CAAJ,CAA2B,CACzBb,IAAI,CAAGU,SAAS,CAACI,GAAV,CAAc,MAAd,CAAP,CACAP,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA+BR,IAA/B,EACA;AACA,GAAIA,IAAI,GAAK,gBAAb,CAA+B,CAC7BK,cAAc,CAACU,OAAf,CAAuB,aAAvB,CAAsCf,IAAtC,EACD,CACD;AAHA,IAIK,IAAIA,IAAI,GAAK,kBAAb,CAAiC,CACpCK,cAAc,CAACU,OAAf,CAAuB,aAAvB,CAAsCf,IAAtC,EACD,CACD;AAHK,IAIA,CACHO,OAAO,CAACC,GAAR,CAAY,gCAAZ,EACD,CACD;AACAN,QAAQ,CAAC,CACPO,IAAI,CAAE,UADC,CAEPT,IAAI,CAAEK,cAAc,CAACC,OAAf,CAAuB,aAAvB,CAFC,CAAD,CAAR,CAID,CApBD,IAoBO,CACLC,OAAO,CAACC,GAAR,CAAY,8BAAZ,EACD,CAED;AACAE,SAAS,CAACM,MAAV,CAAiB,MAAjB,EACAb,OAAO,CAACc,OAAR,CAAgB,CACdL,MAAM,CAAEF,SAAS,CAACQ,QAAV,EADM,CAAhB,EAGD,CACF,CA9CD,CAgDA;AACA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B;AACA,GAAIlB,CAAAA,SAAJ,CAEA;AACA,GAAII,cAAc,CAACC,OAAf,CAAuB,kBAAvB,CAAJ,CAAgD,CAC9CJ,QAAQ,CAAC,CAAEO,IAAI,CAAE,gBAAR,CAAD,CAAR,CACAF,OAAO,CAACC,GAAR,CACE,0BADF,CAEEH,cAAc,CAACC,OAAf,CAAuB,kBAAvB,CAFF,EAID,CAED;AARA,IASK,CACH;AACA,GAAMI,CAAAA,SAAS,CAAG,GAAIC,CAAAA,eAAJ,CAAoBZ,QAAQ,CAACa,MAA7B,CAAlB,CAEA,GAAIF,SAAS,CAACG,GAAV,CAAc,WAAd,CAAJ,CAAgC,CAC9BZ,SAAS,CAAG,CAACS,SAAS,CAACI,GAAV,CAAc,WAAd,CAAb,CAEA;AACA,GAAI,CAACM,KAAK,CAACnB,SAAD,CAAV,CAAuB,CACrB;AACAI,cAAc,CAACU,OAAf,CAAuB,kBAAvB,CAA2Cd,SAA3C,EACA;AACAC,QAAQ,CAAC,CAAEO,IAAI,CAAE,gBAAR,CAAD,CAAR,CACAF,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8BP,SAA9B,EACD,CAND,IAMO,CACLM,OAAO,CAACC,GAAR,CAAY,wBAAZ,EACD,CACF,CAbD,IAaO,CACLD,OAAO,CAACC,GAAR,CAAY,mCAAZ,EACD,CACF,CACF,CAnCD,CAqCA;AACA,GAAMa,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB;AACA,GAAIC,CAAAA,KAAJ,CAEA;AACA,GAAIjB,cAAc,CAACC,OAAf,CAAuB,cAAvB,CAAJ,CAA4C,CAC1CC,OAAO,CAACC,GAAR,CACE,sBADF,CAEEH,cAAc,CAACC,OAAf,CAAuB,cAAvB,CAFF,EAID,CALD,IAKO,CACL;AACA,GAAMI,CAAAA,SAAS,CAAG,GAAIC,CAAAA,eAAJ,CAAoBZ,QAAQ,CAACa,MAA7B,CAAlB,CAEA,GAAIF,SAAS,CAACG,GAAV,CAAc,OAAd,CAAJ,CAA4B,CAC1B;AACAS,KAAK,CAAGZ,SAAS,CAACI,GAAV,CAAc,OAAd,CAAR,CACAP,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0Bc,KAA1B,EACA;AACAjB,cAAc,CAACU,OAAf,CAAuB,cAAvB,CAAuCO,KAAvC,EACD,CAND,IAMO,CACLf,OAAO,CAACC,GAAR,CAAY,+BAAZ,EACD,CACF,CACF,CAxBD,CA0BA;AACA,GAAMe,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB;AACA,GAAMb,CAAAA,SAAS,CAAG,GAAIC,CAAAA,eAAJ,CAAoBZ,QAAQ,CAACa,MAA7B,CAAlB,CAEA,GAAIF,SAAS,CAACG,GAAV,CAAc,OAAd,CAAJ,CAA4B,CAC1BH,SAAS,CAACM,MAAV,CAAiB,OAAjB,EACD,CACD,GAAIN,SAAS,CAACG,GAAV,CAAc,WAAd,CAAJ,CAAgC,CAC9BH,SAAS,CAACM,MAAV,CAAiB,WAAjB,EACD,CACD,GAAIN,SAAS,CAACG,GAAV,CAAc,MAAd,CAAJ,CAA2B,CACzBH,SAAS,CAACM,MAAV,CAAiB,MAAjB,EACD,CAED;AACAb,OAAO,CAACc,OAAR,CAAgB,CACdL,MAAM,CAAEF,SAAS,CAACQ,QAAV,EADM,CAAhB,EAGD,CAlBD,CAoBAC,gBAAgB,GAChBE,YAAY,GACZjB,WAAW,GACXmB,UAAU,GACX,CA5IQ,CA4IN,CAACrB,QAAD,CAAWC,OAAX,CAAoBJ,QAAQ,CAACa,MAA7B,CA5IM,CAAT,CA8IA,mBACE,aAAK,SAAS,CAAC,MAAf,WACG,CAACX,SAAD,eACC,YAAK,SAAS,CAAC,qBAAf,uBACE,aAAK,SAAS,CAAC,wBAAf,wBACE,KAAC,gBAAD,IADF,cAEE,qDAFF,cAGE,uGAHF,GADF,EAFJ,CAaGD,IAAI,cACH,aAAK,SAAS,CAAC,gBAAf,wBACE,YAAK,SAAS,CAAC,aAAf,uBADF,cAEE,KAAC,QAAD,IAFF,cAGE,KAAC,MAAD,IAHF,cAIE,KAAC,SAAD,IAJF,GADG,cAQH,YAAK,SAAS,CAAC,uBAAf,uBACE,aAAK,SAAS,CAAC,0BAAf,wBACE,4CADF,cAEE,6FAFF,cAME,aAAK,SAAS,CAAC,8BAAf,wBACE,UAAG,IAAI,CAAC,sBAAR,uBACE,0CADF,EADF,cAIE,UAAG,IAAI,CAAC,wBAAR,uBACE,4CADF,EAJF,GANF,GADF,EArBJ,GADF,CA0CD,CAED,cAAeF,CAAAA,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Question from \"./Question\";\r\nimport Answer from \"./Answer\";\r\nimport Navigator from \"./Navigator\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\r\nimport \"../css/Test.css\";\r\n\r\nfunction Test({ location }) {\r\n  const [{ test, contactId }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    // Connect Session Storage With Test Type\r\n    const processTest = () => {\r\n      // Check if session contains Test\r\n      if (sessionStorage.getItem(\"sessionTest\")) {\r\n        console.log(\"üîê Session Test: \", sessionStorage.getItem(\"sessionTest\"));\r\n        dispatch({\r\n          type: \"SET_TEST\",\r\n          test: sessionStorage.getItem(\"sessionTest\"),\r\n        });\r\n      }\r\n\r\n      // Set Test From URL Params\r\n      else {\r\n        const urlParams = new URLSearchParams(location.search);\r\n        var test;\r\n\r\n        // Process \"test\" Parameter\r\n        if (urlParams.has(\"test\")) {\r\n          test = urlParams.get(\"test\");\r\n          console.log(\"üîê Param Test: \", test);\r\n          // Sfm Assessment\r\n          if (test === \"sfm-assessment\") {\r\n            sessionStorage.setItem(\"sessionTest\", test);\r\n          }\r\n          // Vault Assessment\r\n          else if (test === \"vault-assessment\") {\r\n            sessionStorage.setItem(\"sessionTest\", test);\r\n          }\r\n          // Default\r\n          else {\r\n            console.log(\"üîê Test param value not valid!\");\r\n          }\r\n          // Activate Test\r\n          dispatch({\r\n            type: \"SET_TEST\",\r\n            test: sessionStorage.getItem(\"sessionTest\"),\r\n          });\r\n        } else {\r\n          console.log(\"üîê Test param was not found!\");\r\n        }\r\n\r\n        // Remove contactId From Params\r\n        urlParams.delete(\"test\");\r\n        history.replace({\r\n          search: urlParams.toString(),\r\n        });\r\n      }\r\n    };\r\n\r\n    // Connect Session Storage to IS ContactId\r\n    const processContactId = () => {\r\n      // Declare variable\r\n      var contactId;\r\n\r\n      // Check if session contains contactId\r\n      if (sessionStorage.getItem(\"sessionContactId\")) {\r\n        dispatch({ type: \"SET_CONTACT_ID\" });\r\n        console.log(\r\n          \"üîê ContactId Validated: \",\r\n          sessionStorage.getItem(\"sessionContactId\")\r\n        );\r\n      }\r\n\r\n      // Set contactId from URL params\r\n      else {\r\n        // Fetch URL parameters\r\n        const urlParams = new URLSearchParams(location.search);\r\n\r\n        if (urlParams.has(\"contactId\")) {\r\n          contactId = +urlParams.get(\"contactId\");\r\n\r\n          // Validate contactId & process\r\n          if (!isNaN(contactId)) {\r\n            // Set session storage\r\n            sessionStorage.setItem(\"sessionContactId\", contactId);\r\n            // Update DataLayer to validate session population\r\n            dispatch({ type: \"SET_CONTACT_ID\" });\r\n            console.log(\"üîê contactId: \", contactId);\r\n          } else {\r\n            console.log(\"üîê contactId is NaN...\");\r\n          }\r\n        } else {\r\n          console.log(\"üîê contactId param was not found!\");\r\n        }\r\n      }\r\n    };\r\n\r\n    // Connect Session Storage to Email\r\n    const processEmail = () => {\r\n      // Declare variable\r\n      var email;\r\n\r\n      // Check if session contains contactId\r\n      if (sessionStorage.getItem(\"sessionEmail\")) {\r\n        console.log(\r\n          \"üîê Email Validated: \",\r\n          sessionStorage.getItem(\"sessionEmail\")\r\n        );\r\n      } else {\r\n        // Fetch URL parameters\r\n        const urlParams = new URLSearchParams(location.search);\r\n\r\n        if (urlParams.has(\"email\")) {\r\n          // Set email\r\n          email = urlParams.get(\"email\");\r\n          console.log(\"üîê email: \", email);\r\n          // Set session storage\r\n          sessionStorage.setItem(\"sessionEmail\", email);\r\n        } else {\r\n          console.log(\"üîê Email param was not found!\");\r\n        }\r\n      }\r\n    };\r\n\r\n    // Remove URL Params\r\n    const processUrl = () => {\r\n      // Fetch URL parameters\r\n      const urlParams = new URLSearchParams(location.search);\r\n\r\n      if (urlParams.has(\"email\")) {\r\n        urlParams.delete(\"email\");\r\n      }\r\n      if (urlParams.has(\"contactId\")) {\r\n        urlParams.delete(\"contactId\");\r\n      }\r\n      if (urlParams.has(\"test\")) {\r\n        urlParams.delete(\"test\");\r\n      }\r\n\r\n      // Remove contactId From Params\r\n      history.replace({\r\n        search: urlParams.toString(),\r\n      });\r\n    };\r\n\r\n    processContactId();\r\n    processEmail();\r\n    processTest();\r\n    processUrl();\r\n  }, [dispatch, history, location.search]);\r\n\r\n  return (\r\n    <div className=\"test\">\r\n      {!contactId && (\r\n        <div className=\"test-errorMissingID\">\r\n          <div className=\"test-errorMissingIDBox\">\r\n            <ErrorOutlineIcon />\r\n            <p>Your data will not be saved...</p>\r\n            <p>\r\n              You can still take the assessment, but your data will not transfer\r\n              to the vault.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {test ? (\r\n        <div className=\"test-container\">\r\n          <div className=\"test-header\">Questions</div>\r\n          <Question />\r\n          <Answer />\r\n          <Navigator />\r\n        </div>\r\n      ) : (\r\n        <div className=\"test-errorMissingTest\">\r\n          <div className=\"test-errorMissingTestBox\">\r\n            <h1>Pick Your Assessment</h1>\r\n            <p>\r\n              If you are not a SFM Member, please click take the Vault\r\n              Assessment...\r\n            </p>\r\n            <div className=\"test-errorMissingTestButtons\">\r\n              <a href=\"?test=sfm-assessment\">\r\n                <button>SFM Assessment</button>\r\n              </a>\r\n              <a href=\"?test=vault-assessment\">\r\n                <button>Vault Assessment</button>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n"]},"metadata":{},"sourceType":"module"}