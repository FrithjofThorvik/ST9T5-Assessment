{"ast":null,"code":"import { test } from \"./test\";\nexport const initialState = {\n  questionNum: 1,\n  test: test,\n  answers: [],\n  submit: false,\n  recommended: {\n    test: \"Hei\"\n  }\n};\n\nconst filterRecommended = (state, action) => {\n  let recommended = state.recommended;\n  return recommended;\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ANSWER\":\n      state.answers[state.questionNum - 1] = action.answer;\n      return { ...state,\n        answers: state.answers\n      };\n\n    case \"NEXT_QUESTION\":\n      if (state.questionNum === state.test.questions.length) {\n        return { ...state,\n          submit: true,\n          questionNum: state.questionNum + 1\n        };\n      }\n\n      if (state.questionNum > state.test.questions.length) {\n        return state;\n      }\n\n      if (state.answers[state.questionNum - 1] === undefined) {\n        alert(\"Please select an answer before advancing...\");\n        return state;\n      }\n\n      return { ...state,\n        questionNum: state.questionNum + 1\n      };\n\n    case \"PREVIOUS_QUESTION\":\n      if (state.questionNum === 1) {\n        return state;\n      }\n\n      if (state.questionNum > state.test.questions.length) {\n        return { ...state,\n          submit: false,\n          questionNum: state.questionNum - 1\n        };\n      }\n\n      return { ...state,\n        questionNum: state.questionNum - 1\n      };\n\n    case \"SUBMIT\":\n      let recommended = filterRecommended(state, action);\n      return { ...state,\n        recommended: recommended\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/frith/Desktop/dev/react/personality/src/configs/reducer.js"],"names":["test","initialState","questionNum","answers","submit","recommended","filterRecommended","state","action","reducer","type","answer","questions","length","undefined","alert"],"mappings":"AAAA,SAASA,IAAT,QAAqB,QAArB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,WAAW,EAAE,CADa;AAE1BF,EAAAA,IAAI,EAAEA,IAFoB;AAG1BG,EAAAA,OAAO,EAAE,EAHiB;AAI1BC,EAAAA,MAAM,EAAE,KAJkB;AAK1BC,EAAAA,WAAW,EAAE;AAAEL,IAAAA,IAAI,EAAE;AAAR;AALa,CAArB;;AAQP,MAAMM,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,MAAIH,WAAW,GAAGE,KAAK,CAACF,WAAxB;AACA,SAAOA,WAAP;AACD,CAHD;;AAKA,MAAMI,OAAO,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACE,IAAf;AACE,SAAK,QAAL;AACEH,MAAAA,KAAK,CAACJ,OAAN,CAAcI,KAAK,CAACL,WAAN,GAAoB,CAAlC,IAAuCM,MAAM,CAACG,MAA9C;AAEA,aAAO,EACL,GAAGJ,KADE;AAELJ,QAAAA,OAAO,EAAEI,KAAK,CAACJ;AAFV,OAAP;;AAKF,SAAK,eAAL;AACE,UAAII,KAAK,CAACL,WAAN,KAAsBK,KAAK,CAACP,IAAN,CAAWY,SAAX,CAAqBC,MAA/C,EAAuD;AACrD,eAAO,EACL,GAAGN,KADE;AAELH,UAAAA,MAAM,EAAE,IAFH;AAGLF,UAAAA,WAAW,EAAEK,KAAK,CAACL,WAAN,GAAoB;AAH5B,SAAP;AAKD;;AACD,UAAIK,KAAK,CAACL,WAAN,GAAoBK,KAAK,CAACP,IAAN,CAAWY,SAAX,CAAqBC,MAA7C,EAAqD;AACnD,eAAON,KAAP;AACD;;AACD,UAAIA,KAAK,CAACJ,OAAN,CAAcI,KAAK,CAACL,WAAN,GAAoB,CAAlC,MAAyCY,SAA7C,EAAwD;AACtDC,QAAAA,KAAK,CAAC,6CAAD,CAAL;AACA,eAAOR,KAAP;AACD;;AACD,aAAO,EACL,GAAGA,KADE;AAELL,QAAAA,WAAW,EAAEK,KAAK,CAACL,WAAN,GAAoB;AAF5B,OAAP;;AAKF,SAAK,mBAAL;AACE,UAAIK,KAAK,CAACL,WAAN,KAAsB,CAA1B,EAA6B;AAC3B,eAAOK,KAAP;AACD;;AACD,UAAIA,KAAK,CAACL,WAAN,GAAoBK,KAAK,CAACP,IAAN,CAAWY,SAAX,CAAqBC,MAA7C,EAAqD;AACnD,eAAO,EACL,GAAGN,KADE;AAELH,UAAAA,MAAM,EAAE,KAFH;AAGLF,UAAAA,WAAW,EAAEK,KAAK,CAACL,WAAN,GAAoB;AAH5B,SAAP;AAKD;;AACD,aAAO,EACL,GAAGK,KADE;AAELL,QAAAA,WAAW,EAAEK,KAAK,CAACL,WAAN,GAAoB;AAF5B,OAAP;;AAKF,SAAK,QAAL;AACE,UAAIG,WAAW,GAAGC,iBAAiB,CAACC,KAAD,EAAQC,MAAR,CAAnC;AACA,aAAO,EACL,GAAGD,KADE;AAELF,QAAAA,WAAW,EAAEA;AAFR,OAAP;;AAKF;AACE,aAAOE,KAAP;AArDJ;AAuDD,CAxDD;;AA0DA,eAAeE,OAAf","sourcesContent":["import { test } from \"./test\";\r\n\r\nexport const initialState = {\r\n  questionNum: 1,\r\n  test: test,\r\n  answers: [],\r\n  submit: false,\r\n  recommended: { test: \"Hei\" },\r\n};\r\n\r\nconst filterRecommended = (state, action) => {\r\n  let recommended = state.recommended;\r\n  return recommended;\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ANSWER\":\r\n      state.answers[state.questionNum - 1] = action.answer;\r\n\r\n      return {\r\n        ...state,\r\n        answers: state.answers,\r\n      };\r\n\r\n    case \"NEXT_QUESTION\":\r\n      if (state.questionNum === state.test.questions.length) {\r\n        return {\r\n          ...state,\r\n          submit: true,\r\n          questionNum: state.questionNum + 1,\r\n        };\r\n      }\r\n      if (state.questionNum > state.test.questions.length) {\r\n        return state;\r\n      }\r\n      if (state.answers[state.questionNum - 1] === undefined) {\r\n        alert(\"Please select an answer before advancing...\");\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        questionNum: state.questionNum + 1,\r\n      };\r\n\r\n    case \"PREVIOUS_QUESTION\":\r\n      if (state.questionNum === 1) {\r\n        return state;\r\n      }\r\n      if (state.questionNum > state.test.questions.length) {\r\n        return {\r\n          ...state,\r\n          submit: false,\r\n          questionNum: state.questionNum - 1,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        questionNum: state.questionNum - 1,\r\n      };\r\n\r\n    case \"SUBMIT\":\r\n      let recommended = filterRecommended(state, action);\r\n      return {\r\n        ...state,\r\n        recommended: recommended,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}