{"ast":null,"code":"import { test, courses, vaultAssessment, vaultAssessmentPaths } from \"./test\"; // DataLayer\n\nexport const initialState = {\n  questionNum: 1,\n  // test: test,\n  test: vaultAssessment,\n  answers: [],\n  submit: false,\n  contactId: false,\n  recommended: null,\n  activeCourse: null\n}; // Remove Item From List\n\nconst removeFromList = (listData, id) => {\n  const newList = listData.filter(item => item.id !== id);\n  return newList;\n}; // Recommended Courses Filter Logic\n\n\nconst filterRecommended = answers => {\n  let recommended = courses; // if (answers[0] === 1) {\n  //   recommended = removeFromList(recommended, 1);\n  // }\n\n  if (answers[1] === 1) {\n    recommended = removeFromList(recommended, 2);\n  }\n\n  if (answers[2] === 1) {\n    recommended = removeFromList(recommended, 3);\n  }\n\n  if (answers[3] !== 1) {\n    recommended = removeFromList(recommended, 4);\n  }\n\n  if (answers[4] !== 1) {\n    recommended = removeFromList(recommended, 5);\n  }\n\n  if (answers[4] !== 2) {\n    recommended = removeFromList(recommended, 6);\n  }\n\n  if (answers[4] !== 4) {\n    recommended = removeFromList(recommended, 7);\n  }\n\n  if (answers[4] !== 6) {\n    recommended = removeFromList(recommended, 8);\n  }\n\n  if (answers[5] === 2) {\n    recommended = removeFromList(recommended, 9);\n  }\n\n  if (answers[6] === 1) {\n    recommended = removeFromList(recommended, 10);\n  }\n\n  return recommended;\n}; // onClick Event Handler\n\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ANSWER\":\n      state.answers[state.questionNum - 1] = action.answer;\n      return { ...state,\n        answers: state.answers\n      };\n\n    case \"ANSWER_MULTI\":\n      let answers = state.answers[state.questionNum - 1];\n      let answer = action.answer;\n      console.log(\"🔐 Clicked: \", answer);\n\n      if (answers) {\n        console.log(\"🔐 Array exists!\");\n\n        if (answers.includes(answer)) {\n          console.log(\"🔐 Remove item!\");\n          answers.splice(answers.indexOf(answer), 1);\n        } else {\n          console.log(\"🔐 Add item!\");\n          answers.push(answer);\n        }\n      } else {\n        console.log(\"🔐 Array doesn't exist!\");\n        answers = [answer];\n      }\n\n      state.answers[state.questionNum - 1] = answers; // if (state.answers[state.questionNum - 1]) {\n      //   console.log(\"🔐 Element was found!\");\n      //   // Edit list if existent\n      //   let answers = state.answers[state.questionNum - 1];\n      //   if (!answers.includes(action.answer)) {\n      //     console.log(\"🔐 Element item added!\");\n      //     // Add answer to list if non-existent\n      //     answers.push(action.answer);\n      //   } else {\n      //     console.log(\"🔐 Element item removed\");\n      //     // Remove answer from list if existent\n      //     answers.splice(answers.indexOf(action.answer), 1);\n      //   }\n      //   answers.sort();\n      //   state.answers[state.questionNum - 1] = answers;\n      // } else {\n      //   // Create list if non-existent\n      //   state.answers[state.questionNum - 1] = [];\n      //   state.answers[state.questionNum - 1].push(action.answer);\n      // }\n\n      return { ...state,\n        answers: state.answers\n      };\n\n    case \"NEXT_QUESTION\":\n      if (state.answers[state.questionNum - 1] === undefined) {\n        alert(\"Please select an answer before advancing...\");\n        return state;\n      }\n\n      if (state.questionNum === state.test.questions.length) {\n        return { ...state,\n          submit: true,\n          questionNum: state.questionNum + 1\n        };\n      }\n\n      if (state.questionNum > state.test.questions.length) {\n        return state;\n      }\n\n      return { ...state,\n        questionNum: state.questionNum + 1\n      };\n\n    case \"PREVIOUS_QUESTION\":\n      if (state.questionNum === 1) {\n        return state;\n      }\n\n      if (state.questionNum > state.test.questions.length) {\n        return { ...state,\n          submit: false,\n          questionNum: state.questionNum - 1\n        };\n      }\n\n      return { ...state,\n        questionNum: state.questionNum - 1\n      };\n\n    case \"SUBMIT\":\n      let recommended = filterRecommended(state.answers);\n      return { ...state,\n        recommended: recommended\n      };\n\n    case \"COURSE_SELECTED\":\n      return { ...state,\n        activeCourse: action.course\n      };\n\n    case \"SET_CONTACT_ID\":\n      return { ...state,\n        contactId: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/frith/Desktop/dev/react/assessment-sfm/src/configs/reducer.js"],"names":["test","courses","vaultAssessment","vaultAssessmentPaths","initialState","questionNum","answers","submit","contactId","recommended","activeCourse","removeFromList","listData","id","newList","filter","item","filterRecommended","reducer","state","action","type","answer","console","log","includes","splice","indexOf","push","undefined","alert","questions","length","course"],"mappings":"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","sourcesContent":["import { test, courses, vaultAssessment, vaultAssessmentPaths } from \"./test\";\r\n\r\n// DataLayer\r\nexport const initialState = {\r\n  questionNum: 1,\r\n  // test: test,\r\n  test: vaultAssessment,\r\n  answers: [],\r\n  submit: false,\r\n  contactId: false,\r\n  recommended: null,\r\n  activeCourse: null,\r\n};\r\n\r\n// Remove Item From List\r\nconst removeFromList = (listData, id) => {\r\n  const newList = listData.filter((item) => item.id !== id);\r\n  return newList;\r\n};\r\n\r\n// Recommended Courses Filter Logic\r\nconst filterRecommended = (answers) => {\r\n  let recommended = courses;\r\n  // if (answers[0] === 1) {\r\n  //   recommended = removeFromList(recommended, 1);\r\n  // }\r\n  if (answers[1] === 1) {\r\n    recommended = removeFromList(recommended, 2);\r\n  }\r\n  if (answers[2] === 1) {\r\n    recommended = removeFromList(recommended, 3);\r\n  }\r\n  if (answers[3] !== 1) {\r\n    recommended = removeFromList(recommended, 4);\r\n  }\r\n  if (answers[4] !== 1) {\r\n    recommended = removeFromList(recommended, 5);\r\n  }\r\n  if (answers[4] !== 2) {\r\n    recommended = removeFromList(recommended, 6);\r\n  }\r\n  if (answers[4] !== 4) {\r\n    recommended = removeFromList(recommended, 7);\r\n  }\r\n  if (answers[4] !== 6) {\r\n    recommended = removeFromList(recommended, 8);\r\n  }\r\n  if (answers[5] === 2) {\r\n    recommended = removeFromList(recommended, 9);\r\n  }\r\n  if (answers[6] === 1) {\r\n    recommended = removeFromList(recommended, 10);\r\n  }\r\n  return recommended;\r\n};\r\n\r\n// onClick Event Handler\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ANSWER\":\r\n      state.answers[state.questionNum - 1] = action.answer;\r\n\r\n      return {\r\n        ...state,\r\n        answers: state.answers,\r\n      };\r\n\r\n    case \"ANSWER_MULTI\":\r\n      let answers = state.answers[state.questionNum - 1];\r\n      let answer = action.answer;\r\n      console.log(\"🔐 Clicked: \", answer);\r\n\r\n      if (answers) {\r\n        console.log(\"🔐 Array exists!\");\r\n        if (answers.includes(answer)) {\r\n          console.log(\"🔐 Remove item!\");\r\n          answers.splice(answers.indexOf(answer), 1);\r\n        } else {\r\n          console.log(\"🔐 Add item!\");\r\n          answers.push(answer);\r\n        }\r\n      } else {\r\n        console.log(\"🔐 Array doesn't exist!\");\r\n        answers = [answer];\r\n      }\r\n      state.answers[state.questionNum - 1] = answers;\r\n      // if (state.answers[state.questionNum - 1]) {\r\n      //   console.log(\"🔐 Element was found!\");\r\n      //   // Edit list if existent\r\n      //   let answers = state.answers[state.questionNum - 1];\r\n\r\n      //   if (!answers.includes(action.answer)) {\r\n      //     console.log(\"🔐 Element item added!\");\r\n      //     // Add answer to list if non-existent\r\n      //     answers.push(action.answer);\r\n      //   } else {\r\n      //     console.log(\"🔐 Element item removed\");\r\n      //     // Remove answer from list if existent\r\n      //     answers.splice(answers.indexOf(action.answer), 1);\r\n      //   }\r\n      //   answers.sort();\r\n      //   state.answers[state.questionNum - 1] = answers;\r\n      // } else {\r\n      //   // Create list if non-existent\r\n      //   state.answers[state.questionNum - 1] = [];\r\n      //   state.answers[state.questionNum - 1].push(action.answer);\r\n      // }\r\n\r\n      return {\r\n        ...state,\r\n        answers: state.answers,\r\n      };\r\n\r\n    case \"NEXT_QUESTION\":\r\n      if (state.answers[state.questionNum - 1] === undefined) {\r\n        alert(\"Please select an answer before advancing...\");\r\n        return state;\r\n      }\r\n      if (state.questionNum === state.test.questions.length) {\r\n        return {\r\n          ...state,\r\n          submit: true,\r\n          questionNum: state.questionNum + 1,\r\n        };\r\n      }\r\n      if (state.questionNum > state.test.questions.length) {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        questionNum: state.questionNum + 1,\r\n      };\r\n\r\n    case \"PREVIOUS_QUESTION\":\r\n      if (state.questionNum === 1) {\r\n        return state;\r\n      }\r\n      if (state.questionNum > state.test.questions.length) {\r\n        return {\r\n          ...state,\r\n          submit: false,\r\n          questionNum: state.questionNum - 1,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        questionNum: state.questionNum - 1,\r\n      };\r\n\r\n    case \"SUBMIT\":\r\n      let recommended = filterRecommended(state.answers);\r\n      return {\r\n        ...state,\r\n        recommended: recommended,\r\n      };\r\n\r\n    case \"COURSE_SELECTED\":\r\n      return {\r\n        ...state,\r\n        activeCourse: action.course,\r\n      };\r\n\r\n    case \"SET_CONTACT_ID\":\r\n      return {\r\n        ...state,\r\n        contactId: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}