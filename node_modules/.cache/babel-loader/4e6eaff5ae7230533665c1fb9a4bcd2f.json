{"ast":null,"code":"import { test, courses } from \"./test\";\nexport const initialState = {\n  questionNum: 1,\n  test: test,\n  answers: [],\n  submit: false,\n  recommended: {},\n  activeCourse: null\n};\n\nconst filterRecommended = answers => {\n  let recommended = courses;\n\n  if (answers[0] === 1) {\n    delete recommended[\"C3\"];\n  } else {\n    delete recommended[\"C2\"];\n  }\n\n  if (answers[4] === 2) {\n    delete recommended[\"C1\"];\n  }\n\n  return recommended;\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ANSWER\":\n      state.answers[state.questionNum - 1] = action.answer;\n      return { ...state,\n        answers: state.answers\n      };\n\n    case \"NEXT_QUESTION\":\n      if (state.questionNum === state.test.questions.length) {\n        return { ...state,\n          submit: true,\n          questionNum: state.questionNum + 1\n        };\n      }\n\n      if (state.questionNum > state.test.questions.length) {\n        return state;\n      }\n\n      if (state.answers[state.questionNum - 1] === undefined) {\n        alert(\"Please select an answer before advancing...\");\n        return state;\n      }\n\n      return { ...state,\n        questionNum: state.questionNum + 1\n      };\n\n    case \"PREVIOUS_QUESTION\":\n      if (state.questionNum === 1) {\n        return state;\n      }\n\n      if (state.questionNum > state.test.questions.length) {\n        return { ...state,\n          submit: false,\n          questionNum: state.questionNum - 1\n        };\n      }\n\n      return { ...state,\n        questionNum: state.questionNum - 1\n      };\n\n    case \"SUBMIT\":\n      let recommended = filterRecommended(state.answers);\n      return { ...state,\n        recommended: recommended\n      };\n\n    case \"COURSE_SELECTED\":\n      return { ...state,\n        activeCourse: action.course\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/frith/Desktop/dev/react/personality/src/configs/reducer.js"],"names":["test","courses","initialState","questionNum","answers","submit","recommended","activeCourse","filterRecommended","reducer","state","action","type","answer","questions","length","undefined","alert","course"],"mappings":"AAAA,SAASA,IAAT,EAAeC,OAAf,QAA8B,QAA9B;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,WAAW,EAAE,CADa;AAE1BH,EAAAA,IAAI,EAAEA,IAFoB;AAG1BI,EAAAA,OAAO,EAAE,EAHiB;AAI1BC,EAAAA,MAAM,EAAE,KAJkB;AAK1BC,EAAAA,WAAW,EAAE,EALa;AAM1BC,EAAAA,YAAY,EAAE;AANY,CAArB;;AASP,MAAMC,iBAAiB,GAAIJ,OAAD,IAAa;AACrC,MAAIE,WAAW,GAAGL,OAAlB;;AACA,MAAIG,OAAO,CAAC,CAAD,CAAP,KAAe,CAAnB,EAAsB;AACpB,WAAOE,WAAW,CAAC,IAAD,CAAlB;AACD,GAFD,MAEO;AACL,WAAOA,WAAW,CAAC,IAAD,CAAlB;AACD;;AACD,MAAIF,OAAO,CAAC,CAAD,CAAP,KAAe,CAAnB,EAAsB;AACpB,WAAOE,WAAW,CAAC,IAAD,CAAlB;AACD;;AACD,SAAOA,WAAP;AACD,CAXD;;AAaA,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACEF,MAAAA,KAAK,CAACN,OAAN,CAAcM,KAAK,CAACP,WAAN,GAAoB,CAAlC,IAAuCQ,MAAM,CAACE,MAA9C;AAEA,aAAO,EACL,GAAGH,KADE;AAELN,QAAAA,OAAO,EAAEM,KAAK,CAACN;AAFV,OAAP;;AAKF,SAAK,eAAL;AACE,UAAIM,KAAK,CAACP,WAAN,KAAsBO,KAAK,CAACV,IAAN,CAAWc,SAAX,CAAqBC,MAA/C,EAAuD;AACrD,eAAO,EACL,GAAGL,KADE;AAELL,UAAAA,MAAM,EAAE,IAFH;AAGLF,UAAAA,WAAW,EAAEO,KAAK,CAACP,WAAN,GAAoB;AAH5B,SAAP;AAKD;;AACD,UAAIO,KAAK,CAACP,WAAN,GAAoBO,KAAK,CAACV,IAAN,CAAWc,SAAX,CAAqBC,MAA7C,EAAqD;AACnD,eAAOL,KAAP;AACD;;AACD,UAAIA,KAAK,CAACN,OAAN,CAAcM,KAAK,CAACP,WAAN,GAAoB,CAAlC,MAAyCa,SAA7C,EAAwD;AACtDC,QAAAA,KAAK,CAAC,6CAAD,CAAL;AACA,eAAOP,KAAP;AACD;;AACD,aAAO,EACL,GAAGA,KADE;AAELP,QAAAA,WAAW,EAAEO,KAAK,CAACP,WAAN,GAAoB;AAF5B,OAAP;;AAKF,SAAK,mBAAL;AACE,UAAIO,KAAK,CAACP,WAAN,KAAsB,CAA1B,EAA6B;AAC3B,eAAOO,KAAP;AACD;;AACD,UAAIA,KAAK,CAACP,WAAN,GAAoBO,KAAK,CAACV,IAAN,CAAWc,SAAX,CAAqBC,MAA7C,EAAqD;AACnD,eAAO,EACL,GAAGL,KADE;AAELL,UAAAA,MAAM,EAAE,KAFH;AAGLF,UAAAA,WAAW,EAAEO,KAAK,CAACP,WAAN,GAAoB;AAH5B,SAAP;AAKD;;AACD,aAAO,EACL,GAAGO,KADE;AAELP,QAAAA,WAAW,EAAEO,KAAK,CAACP,WAAN,GAAoB;AAF5B,OAAP;;AAKF,SAAK,QAAL;AACE,UAAIG,WAAW,GAAGE,iBAAiB,CAACE,KAAK,CAACN,OAAP,CAAnC;AACA,aAAO,EACL,GAAGM,KADE;AAELJ,QAAAA,WAAW,EAAEA;AAFR,OAAP;;AAKF,SAAK,iBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELH,QAAAA,YAAY,EAAEI,MAAM,CAACO;AAFhB,OAAP;;AAKF;AACE,aAAOR,KAAP;AA3DJ;AA6DD,CA9DD;;AAgEA,eAAeD,OAAf","sourcesContent":["import { test, courses } from \"./test\";\r\n\r\nexport const initialState = {\r\n  questionNum: 1,\r\n  test: test,\r\n  answers: [],\r\n  submit: false,\r\n  recommended: {},\r\n  activeCourse: null,\r\n};\r\n\r\nconst filterRecommended = (answers) => {\r\n  let recommended = courses;\r\n  if (answers[0] === 1) {\r\n    delete recommended[\"C3\"];\r\n  } else {\r\n    delete recommended[\"C2\"];\r\n  }\r\n  if (answers[4] === 2) {\r\n    delete recommended[\"C1\"];\r\n  }\r\n  return recommended;\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ANSWER\":\r\n      state.answers[state.questionNum - 1] = action.answer;\r\n\r\n      return {\r\n        ...state,\r\n        answers: state.answers,\r\n      };\r\n\r\n    case \"NEXT_QUESTION\":\r\n      if (state.questionNum === state.test.questions.length) {\r\n        return {\r\n          ...state,\r\n          submit: true,\r\n          questionNum: state.questionNum + 1,\r\n        };\r\n      }\r\n      if (state.questionNum > state.test.questions.length) {\r\n        return state;\r\n      }\r\n      if (state.answers[state.questionNum - 1] === undefined) {\r\n        alert(\"Please select an answer before advancing...\");\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        questionNum: state.questionNum + 1,\r\n      };\r\n\r\n    case \"PREVIOUS_QUESTION\":\r\n      if (state.questionNum === 1) {\r\n        return state;\r\n      }\r\n      if (state.questionNum > state.test.questions.length) {\r\n        return {\r\n          ...state,\r\n          submit: false,\r\n          questionNum: state.questionNum - 1,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        questionNum: state.questionNum - 1,\r\n      };\r\n\r\n    case \"SUBMIT\":\r\n      let recommended = filterRecommended(state.answers);\r\n      return {\r\n        ...state,\r\n        recommended: recommended,\r\n      };\r\n\r\n    case \"COURSE_SELECTED\":\r\n      return {\r\n        ...state,\r\n        activeCourse: action.course,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}