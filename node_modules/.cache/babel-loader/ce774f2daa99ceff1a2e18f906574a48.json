{"ast":null,"code":"import { sfmAssessment, vaultAssessment, sfmAssessmentPaths, vaultAssessmentPaths, sfmAssessmentMessage, vaultAssessmentMessage } from \"./test\"; // DataLayer\n\nexport const initialState = {\n  questionNum: 1,\n  test: null,\n  answers: [],\n  submit: false,\n  contactId: false,\n  recommended: null,\n  message: null,\n  activePath: null\n}; // Remove Item From List\n\nconst removeFromList = (listData, id) => {\n  const newList = listData.filter(item => item.id !== id);\n  return newList;\n}; // SFM Assessment Filter Answers\n\n\nconst sfmAssessmentFilter = answers => {\n  let recommended = sfmAssessmentPaths;\n  let message = sfmAssessmentMessage;\n\n  if (answers[1] === 1) {\n    recommended = removeFromList(recommended, 2);\n  }\n\n  if (answers[2] === 1) {\n    recommended = removeFromList(recommended, 3);\n  }\n\n  if (answers[3] !== 1) {\n    recommended = removeFromList(recommended, 4);\n  }\n\n  if (answers[4] !== 1) {\n    recommended = removeFromList(recommended, 5);\n  }\n\n  if (answers[4] !== 2) {\n    recommended = removeFromList(recommended, 6);\n  }\n\n  if (answers[4] !== 4) {\n    recommended = removeFromList(recommended, 7);\n  }\n\n  if (answers[4] !== 6) {\n    recommended = removeFromList(recommended, 8);\n  }\n\n  if (answers[5] === 2) {\n    recommended = removeFromList(recommended, 9);\n  }\n\n  if (answers[6] === 1) {\n    recommended = removeFromList(recommended, 10);\n  }\n\n  return [recommended, message];\n}; // Vault Assessment Filter Answers\n\n\nconst vaultAssessmentFilter = answers => {\n  let recommended = vaultAssessmentPaths;\n  let message = vaultAssessmentMessage; // Score Increased\n  // Affiliate [0], Ecom [1], Coach [2], Prop [3], Forex [4], Frla [5], YT [6], Blog [7]\n  // Question 1, 2, 3, 5, 6\n\n  if (answers[0] === 1) {\n    recommended[0].score += 10;\n  }\n\n  if (answers[1] === 1) {\n    recommended[0].score += 10;\n  }\n\n  if (answers[2] === 1) {\n    recommended[0].score += 10;\n  }\n\n  if (answers[4] === 1) {\n    recommended[0].score += 10;\n  }\n\n  if (answers[5] === 1) {\n    recommended[0].score += 10;\n  } // Question 9\n\n\n  if (answers[8][0] === 1) {\n    recommended[0].score += 10;\n  }\n\n  if (answers[8][1] === 1) {\n    recommended[3].score += 10;\n  }\n\n  if (answers[8][2] === 1) {\n    recommended[2].score += 10;\n  }\n\n  if (answers[8][3] === 1) {\n    recommended[6].score += 10;\n    recommended[7].score += 10;\n  }\n\n  if (answers[8][4] === 1) {\n    recommended[4].score += 10;\n    recommended[5].score += 10;\n  } // Question 11\n\n\n  if (answers[10][0] === 1) {// recommended[0].score += 10;\n  }\n\n  if (answers[10][1] === 1) {// recommended[0].score += 10;\n    // recommended[1].score += 10;\n    // recommended[2].score += 10;\n  }\n\n  if (answers[10][2] === 1) {\n    recommended[1].score += 10;\n  }\n\n  if (answers[10][3] === 1) {\n    recommended[6].score += 10;\n    recommended[7].score += 10;\n  }\n\n  if (answers[10][4] === 1) {\n    recommended[0].score += 10;\n  }\n\n  if (answers[10][5] === 1) {\n    recommended[3].score += 10;\n  }\n\n  if (answers[10][6] === 1) {\n    recommended[4].score += 10;\n  } // Score Decreased\n  // Eliminating Answers\n  // Question 10\n\n\n  if (answers[9][0] === 1) {\n    recommended = removeFromList(recommended, 5);\n  }\n\n  if (answers[9][1] === 1) {\n    recommended = removeFromList(recommended, 7);\n  }\n\n  if (answers[9][2] === 1) {\n    recommended = removeFromList(recommended, 8);\n  }\n\n  if (answers[9][3] === 1) {\n    recommended = removeFromList(recommended, 6);\n  }\n\n  if (answers[9][4] === 1) {\n    recommended = removeFromList(recommended, 2);\n  }\n\n  if (answers[9][5] === 1) {\n    recommended = removeFromList(recommended, 3);\n  }\n\n  if (answers[9][6] === 1) {// recommended = removeFromList(recommended, 5);\n    // Warning If Question Answered\n  }\n\n  return [recommended, message];\n}; // Recommended Paths Filter VAULT Logic\n// onClick Event Handler\n\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ANSWER\":\n      state.answers[state.questionNum - 1] = action.answer;\n      return { ...state,\n        answers: state.answers\n      };\n\n    case \"NEXT_QUESTION\":\n      if (state.questionNum === state.test.questions.length) {\n        return { ...state,\n          submit: true,\n          questionNum: state.questionNum + 1\n        };\n      }\n\n      if (state.questionNum > state.test.questions.length) {\n        return state;\n      }\n\n      return { ...state,\n        questionNum: state.questionNum + 1\n      };\n\n    case \"PREVIOUS_QUESTION\":\n      if (state.questionNum === 1) {\n        return state;\n      }\n\n      if (state.questionNum > state.test.questions.length) {\n        return { ...state,\n          submit: false,\n          questionNum: state.questionNum - 1\n        };\n      }\n\n      return { ...state,\n        questionNum: state.questionNum - 1\n      };\n\n    case \"SUBMIT\":\n      let sessionTest = sessionStorage.getItem(\"sessionTest\");\n      let recommended = \"\";\n      let message = \"\";\n\n      if (sessionTest === \"sfm-assessment\") {\n        [recommended, message] = sfmAssessmentFilter(state.answers);\n      } else if (sessionTest === \"vault-assessment\") {\n        [recommended, message] = vaultAssessmentFilter(state.answers);\n      }\n\n      return { ...state,\n        recommended: recommended,\n        message: message\n      };\n\n    case \"PATH_SELECTED\":\n      return { ...state,\n        activePath: action.path\n      };\n\n    case \"SET_CONTACT_ID\":\n      return { ...state,\n        contactId: true\n      };\n\n    case \"SET_TEST\":\n      let tempTest;\n\n      if (action.test === \"sfm-assessment\") {\n        tempTest = sfmAssessment;\n      } else if (action.test === \"vault-assessment\") {\n        tempTest = vaultAssessment;\n      }\n\n      return { ...state,\n        test: tempTest\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/frith/Google Drive/Dev/assessment-sfm/src/configs/reducer.js"],"names":["sfmAssessment","vaultAssessment","sfmAssessmentPaths","vaultAssessmentPaths","sfmAssessmentMessage","vaultAssessmentMessage","initialState","questionNum","test","answers","submit","contactId","recommended","message","activePath","removeFromList","listData","id","newList","filter","item","sfmAssessmentFilter","vaultAssessmentFilter","score","reducer","state","action","type","answer","questions","length","sessionTest","sessionStorage","getItem","path","tempTest"],"mappings":"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","sourcesContent":["import {\r\n  sfmAssessment,\r\n  vaultAssessment,\r\n  sfmAssessmentPaths,\r\n  vaultAssessmentPaths,\r\n  sfmAssessmentMessage,\r\n  vaultAssessmentMessage,\r\n} from \"./test\";\r\n\r\n// DataLayer\r\nexport const initialState = {\r\n  questionNum: 1,\r\n  test: null,\r\n  answers: [],\r\n  submit: false,\r\n  contactId: false,\r\n  recommended: null,\r\n  message: null,\r\n  activePath: null,\r\n};\r\n\r\n// Remove Item From List\r\nconst removeFromList = (listData, id) => {\r\n  const newList = listData.filter((item) => item.id !== id);\r\n  return newList;\r\n};\r\n\r\n// SFM Assessment Filter Answers\r\nconst sfmAssessmentFilter = (answers) => {\r\n  let recommended = sfmAssessmentPaths;\r\n  let message = sfmAssessmentMessage;\r\n\r\n  if (answers[1] === 1) {\r\n    recommended = removeFromList(recommended, 2);\r\n  }\r\n  if (answers[2] === 1) {\r\n    recommended = removeFromList(recommended, 3);\r\n  }\r\n  if (answers[3] !== 1) {\r\n    recommended = removeFromList(recommended, 4);\r\n  }\r\n  if (answers[4] !== 1) {\r\n    recommended = removeFromList(recommended, 5);\r\n  }\r\n  if (answers[4] !== 2) {\r\n    recommended = removeFromList(recommended, 6);\r\n  }\r\n  if (answers[4] !== 4) {\r\n    recommended = removeFromList(recommended, 7);\r\n  }\r\n  if (answers[4] !== 6) {\r\n    recommended = removeFromList(recommended, 8);\r\n  }\r\n  if (answers[5] === 2) {\r\n    recommended = removeFromList(recommended, 9);\r\n  }\r\n  if (answers[6] === 1) {\r\n    recommended = removeFromList(recommended, 10);\r\n  }\r\n  return [recommended, message];\r\n};\r\n\r\n// Vault Assessment Filter Answers\r\nconst vaultAssessmentFilter = (answers) => {\r\n  let recommended = vaultAssessmentPaths;\r\n  let message = vaultAssessmentMessage;\r\n\r\n  // Score Increased\r\n  // Affiliate [0], Ecom [1], Coach [2], Prop [3], Forex [4], Frla [5], YT [6], Blog [7]\r\n  // Question 1, 2, 3, 5, 6\r\n  if (answers[0] === 1) {\r\n    recommended[0].score += 10;\r\n  }\r\n  if (answers[1] === 1) {\r\n    recommended[0].score += 10;\r\n  }\r\n  if (answers[2] === 1) {\r\n    recommended[0].score += 10;\r\n  }\r\n  if (answers[4] === 1) {\r\n    recommended[0].score += 10;\r\n  }\r\n  if (answers[5] === 1) {\r\n    recommended[0].score += 10;\r\n  }\r\n  // Question 9\r\n  if (answers[8][0] === 1) {\r\n    recommended[0].score += 10;\r\n  }\r\n  if (answers[8][1] === 1) {\r\n    recommended[3].score += 10;\r\n  }\r\n  if (answers[8][2] === 1) {\r\n    recommended[2].score += 10;\r\n  }\r\n  if (answers[8][3] === 1) {\r\n    recommended[6].score += 10;\r\n    recommended[7].score += 10;\r\n  }\r\n  if (answers[8][4] === 1) {\r\n    recommended[4].score += 10;\r\n    recommended[5].score += 10;\r\n  }\r\n  // Question 11\r\n  if (answers[10][0] === 1) {\r\n    // recommended[0].score += 10;\r\n  }\r\n  if (answers[10][1] === 1) {\r\n    // recommended[0].score += 10;\r\n    // recommended[1].score += 10;\r\n    // recommended[2].score += 10;\r\n  }\r\n  if (answers[10][2] === 1) {\r\n    recommended[1].score += 10;\r\n  }\r\n  if (answers[10][3] === 1) {\r\n    recommended[6].score += 10;\r\n    recommended[7].score += 10;\r\n  }\r\n  if (answers[10][4] === 1) {\r\n    recommended[0].score += 10;\r\n  }\r\n  if (answers[10][5] === 1) {\r\n    recommended[3].score += 10;\r\n  }\r\n  if (answers[10][6] === 1) {\r\n    recommended[4].score += 10;\r\n  }\r\n  // Score Decreased\r\n\r\n  // Eliminating Answers\r\n  // Question 10\r\n  if (answers[9][0] === 1) {\r\n    recommended = removeFromList(recommended, 5);\r\n  }\r\n  if (answers[9][1] === 1) {\r\n    recommended = removeFromList(recommended, 7);\r\n  }\r\n  if (answers[9][2] === 1) {\r\n    recommended = removeFromList(recommended, 8);\r\n  }\r\n  if (answers[9][3] === 1) {\r\n    recommended = removeFromList(recommended, 6);\r\n  }\r\n  if (answers[9][4] === 1) {\r\n    recommended = removeFromList(recommended, 2);\r\n  }\r\n  if (answers[9][5] === 1) {\r\n    recommended = removeFromList(recommended, 3);\r\n  }\r\n  if (answers[9][6] === 1) {\r\n    // recommended = removeFromList(recommended, 5);\r\n    // Warning If Question Answered\r\n  }\r\n\r\n  return [recommended, message];\r\n};\r\n\r\n// Recommended Paths Filter VAULT Logic\r\n\r\n// onClick Event Handler\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ANSWER\":\r\n      state.answers[state.questionNum - 1] = action.answer;\r\n\r\n      return {\r\n        ...state,\r\n        answers: state.answers,\r\n      };\r\n\r\n    case \"NEXT_QUESTION\":\r\n      if (state.questionNum === state.test.questions.length) {\r\n        return {\r\n          ...state,\r\n          submit: true,\r\n          questionNum: state.questionNum + 1,\r\n        };\r\n      }\r\n      if (state.questionNum > state.test.questions.length) {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        questionNum: state.questionNum + 1,\r\n      };\r\n\r\n    case \"PREVIOUS_QUESTION\":\r\n      if (state.questionNum === 1) {\r\n        return state;\r\n      }\r\n      if (state.questionNum > state.test.questions.length) {\r\n        return {\r\n          ...state,\r\n          submit: false,\r\n          questionNum: state.questionNum - 1,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        questionNum: state.questionNum - 1,\r\n      };\r\n\r\n    case \"SUBMIT\":\r\n      let sessionTest = sessionStorage.getItem(\"sessionTest\");\r\n      let recommended = \"\";\r\n      let message = \"\";\r\n      if (sessionTest === \"sfm-assessment\") {\r\n        [recommended, message] = sfmAssessmentFilter(state.answers);\r\n      } else if (sessionTest === \"vault-assessment\") {\r\n        [recommended, message] = vaultAssessmentFilter(state.answers);\r\n      }\r\n      return {\r\n        ...state,\r\n        recommended: recommended,\r\n        message: message,\r\n      };\r\n\r\n    case \"PATH_SELECTED\":\r\n      return {\r\n        ...state,\r\n        activePath: action.path,\r\n      };\r\n\r\n    case \"SET_CONTACT_ID\":\r\n      return {\r\n        ...state,\r\n        contactId: true,\r\n      };\r\n\r\n    case \"SET_TEST\":\r\n      let tempTest;\r\n      if (action.test === \"sfm-assessment\") {\r\n        tempTest = sfmAssessment;\r\n      } else if (action.test === \"vault-assessment\") {\r\n        tempTest = vaultAssessment;\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        test: tempTest,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}