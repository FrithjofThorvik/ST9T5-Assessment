{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\frith\\\\Google Drive\\\\Dev\\\\assessment-sfm\\\\src\\\\components\\\\Answer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useStateValue } from \"./StateProvider\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../css/Answer.css\";\n\nfunction Answer() {\n  _s();\n\n  const [{\n    questionNum,\n    test,\n    answers,\n    recommended,\n    submit,\n    contactId\n  }, dispatch] = useStateValue();\n  const history = useHistory();\n\n  const handleMultiAnswer = (array, i) => {\n    if (array[i] === 0) {\n      array[i] = 1;\n    } else {\n      array[i] = 0;\n    }\n\n    return array;\n  };\n\n  const handleEmptyArray = () => {\n    let array = [];\n\n    for (let i = 0; i < test.answers[questionNum - 1].options.length; i++) {\n      array.push(0);\n    }\n\n    return array;\n  };\n\n  const submitRecommended = () => {\n    dispatch({\n      type: \"SUBMIT\"\n    });\n\n    if (recommended !== null) {\n      return true;\n    }\n  };\n\n  const handleSubmit = async () => {\n    let wait = await submitRecommended(); // Change Post URL\n\n    if (contactId && wait) {\n      if (sessionStorage.getItem(\"sessionContactId\")) {\n        if (sessionStorage.getItem(\"sessionTest\")) {\n          axios.post(`https://scrapthe9to5.com/scripts/IS/ISVaultAssessment.php?assessment=${sessionStorage.getItem(\"sessionTest\")}`, {\n            contactId: sessionStorage.getItem(\"sessionContactId\"),\n            recommended: recommended,\n            answers: answers\n          }).then(res => {\n            console.log(res);\n          });\n        } else {\n          console.log(\"Session test was not recorded...\");\n        }\n      } else {\n        console.log(\"Session contactId was not recorded...\");\n      }\n    } else {\n      console.log(\"Session contactId was not stored...\");\n    }\n\n    history.push(\"/result\");\n  };\n\n  useEffect = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"answer\",\n    children: [!submit ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer-container\",\n      children: test.answers[questionNum - 1].options.map((option, i) => {\n        var _answers;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            // Single Answer Questions\n            if (test.answers[questionNum - 1].select === \"single\") {\n              dispatch({\n                type: \"ANSWER\",\n                answer: i + 1\n              });\n              dispatch({\n                type: \"NEXT_QUESTION\"\n              });\n            } // Multi Answer Questions\n            else if (test.answers[questionNum - 1].select === \"multi\") {\n                let array = answers[questionNum - 1]; // Handle Empty Multi Answer Array\n\n                if (!array) {\n                  array = handleEmptyArray();\n                } // Handle Multi Answer Array\n\n\n                array = handleMultiAnswer(array, i); // Apply New Answer Array to DataLayer\n\n                dispatch({\n                  type: \"ANSWER\",\n                  answer: array\n                });\n              }\n          },\n          className: `${test.answers[questionNum - 1].select === \"multi\" ? \"answer-optionMulti\" : \"answer-optionSingle\"}\n              ${((_answers = answers[questionNum - 1]) === null || _answers === void 0 ? void 0 : _answers.length) > 1 ? answers[questionNum - 1][i] === 1 ? \"answer--selected\" : \"\" : answers[questionNum - 1] === i + 1 ? \"answer--selected\" : \"\"}\n              `,\n          children: option\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : null, submit ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer-submit\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleSubmit(),\n        className: \"answer-submitButton\",\n        children: \"Submit Answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Answer, \"AAr11+gT/z8RWKeYA4vpBGtT7yA=\", false, function () {\n  return [useStateValue, useHistory];\n});\n\n_c = Answer;\nexport default Answer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Answer\");","map":{"version":3,"sources":["C:/Users/frith/Google Drive/Dev/assessment-sfm/src/components/Answer.js"],"names":["React","useEffect","useStateValue","useHistory","axios","Answer","questionNum","test","answers","recommended","submit","contactId","dispatch","history","handleMultiAnswer","array","i","handleEmptyArray","options","length","push","submitRecommended","type","handleSubmit","wait","sessionStorage","getItem","post","then","res","console","log","map","option","select","answer"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CACJ;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,IAAf;AAAqBC,IAAAA,OAArB;AAA8BC,IAAAA,WAA9B;AAA2CC,IAAAA,MAA3C;AAAmDC,IAAAA;AAAnD,GADI,EAEJC,QAFI,IAGFV,aAAa,EAHjB;AAIA,QAAMW,OAAO,GAAGV,UAAU,EAA1B;;AAEA,QAAMW,iBAAiB,GAAG,CAACC,KAAD,EAAQC,CAAR,KAAc;AACtC,QAAID,KAAK,CAACC,CAAD,CAAL,KAAa,CAAjB,EAAoB;AAClBD,MAAAA,KAAK,CAACC,CAAD,CAAL,GAAW,CAAX;AACD,KAFD,MAEO;AACLD,MAAAA,KAAK,CAACC,CAAD,CAAL,GAAW,CAAX;AACD;;AAED,WAAOD,KAAP;AACD,GARD;;AAUA,QAAME,gBAAgB,GAAG,MAAM;AAC7B,QAAIF,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,IAAI,CAACC,OAAL,CAAaF,WAAW,GAAG,CAA3B,EAA8BY,OAA9B,CAAsCC,MAA1D,EAAkEH,CAAC,EAAnE,EAAuE;AACrED,MAAAA,KAAK,CAACK,IAAN,CAAW,CAAX;AACD;;AACD,WAAOL,KAAP;AACD,GAND;;AAQA,QAAMM,iBAAiB,GAAG,MAAM;AAC9BT,IAAAA,QAAQ,CAAC;AAAEU,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;;AACA,QAAIb,WAAW,KAAK,IAApB,EAA0B;AACxB,aAAO,IAAP;AACD;AACF,GALD;;AAOA,QAAMc,YAAY,GAAG,YAAY;AAC/B,QAAIC,IAAI,GAAG,MAAMH,iBAAiB,EAAlC,CAD+B,CAG/B;;AACA,QAAIV,SAAS,IAAIa,IAAjB,EAAuB;AACrB,UAAIC,cAAc,CAACC,OAAf,CAAuB,kBAAvB,CAAJ,EAAgD;AAC9C,YAAID,cAAc,CAACC,OAAf,CAAuB,aAAvB,CAAJ,EAA2C;AACzCtB,UAAAA,KAAK,CACFuB,IADH,CAEK,wEAAuEF,cAAc,CAACC,OAAf,CACtE,aADsE,CAEtE,EAJN,EAKI;AACEf,YAAAA,SAAS,EAAEc,cAAc,CAACC,OAAf,CAAuB,kBAAvB,CADb;AAEEjB,YAAAA,WAAW,EAAEA,WAFf;AAGED,YAAAA,OAAO,EAAEA;AAHX,WALJ,EAWGoB,IAXH,CAWSC,GAAD,IAAS;AACbC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,WAbH;AAcD,SAfD,MAeO;AACLC,UAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD;AACF,OAnBD,MAmBO;AACLD,QAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACD;AACF,KAvBD,MAuBO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACD;;AACDlB,IAAAA,OAAO,CAACO,IAAR,CAAa,SAAb;AACD,GA/BD;;AAiCAnB,EAAAA,SAAS,GAAG,MAAM,CAAE,CAApB;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,eACG,CAACS,MAAD,gBACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBACGH,IAAI,CAACC,OAAL,CAAaF,WAAW,GAAG,CAA3B,EAA8BY,OAA9B,CAAsCc,GAAtC,CAA0C,CAACC,MAAD,EAASjB,CAAT;AAAA;;AAAA,4BACzC;AAEE,UAAA,OAAO,EAAE,MAAM;AACb;AACA,gBAAIT,IAAI,CAACC,OAAL,CAAaF,WAAW,GAAG,CAA3B,EAA8B4B,MAA9B,KAAyC,QAA7C,EAAuD;AACrDtB,cAAAA,QAAQ,CAAC;AAAEU,gBAAAA,IAAI,EAAE,QAAR;AAAkBa,gBAAAA,MAAM,EAAEnB,CAAC,GAAG;AAA9B,eAAD,CAAR;AACAJ,cAAAA,QAAQ,CAAC;AAAEU,gBAAAA,IAAI,EAAE;AAAR,eAAD,CAAR;AACD,aAHD,CAKA;AALA,iBAMK,IAAIf,IAAI,CAACC,OAAL,CAAaF,WAAW,GAAG,CAA3B,EAA8B4B,MAA9B,KAAyC,OAA7C,EAAsD;AACzD,oBAAInB,KAAK,GAAGP,OAAO,CAACF,WAAW,GAAG,CAAf,CAAnB,CADyD,CAGzD;;AACA,oBAAI,CAACS,KAAL,EAAY;AACVA,kBAAAA,KAAK,GAAGE,gBAAgB,EAAxB;AACD,iBANwD,CAQzD;;;AACAF,gBAAAA,KAAK,GAAGD,iBAAiB,CAACC,KAAD,EAAQC,CAAR,CAAzB,CATyD,CAWzD;;AACAJ,gBAAAA,QAAQ,CAAC;AACPU,kBAAAA,IAAI,EAAE,QADC;AAEPa,kBAAAA,MAAM,EAAEpB;AAFD,iBAAD,CAAR;AAID;AACF,WA3BH;AA4BE,UAAA,SAAS,EAAG,GACVR,IAAI,CAACC,OAAL,CAAaF,WAAW,GAAG,CAA3B,EAA8B4B,MAA9B,KAAyC,OAAzC,GACI,oBADJ,GAEI,qBACL;AACf,gBACgB,aAAA1B,OAAO,CAACF,WAAW,GAAG,CAAf,CAAP,sDAA0Ba,MAA1B,IAAmC,CAAnC,GACIX,OAAO,CAACF,WAAW,GAAG,CAAf,CAAP,CAAyBU,CAAzB,MAAgC,CAAhC,GACE,kBADF,GAEE,EAHN,GAIIR,OAAO,CAACF,WAAW,GAAG,CAAf,CAAP,KAA6BU,CAAC,GAAG,CAAjC,GACA,kBADA,GAEA,EACL;AACf,eA1CY;AAAA,oBA4CGiB;AA5CH,WACOjB,CADP;AAAA;AAAA;AAAA;AAAA,gBADyC;AAAA,OAA1C;AADH;AAAA;AAAA;AAAA;AAAA,YADD,GAmDG,IApDN,EAqDGN,MAAM,gBACL;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE;AAAK,QAAA,OAAO,EAAE,MAAMa,YAAY,EAAhC;AAAoC,QAAA,SAAS,EAAC,qBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADK,GAMH,IA3DN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+DD;;GAlIQlB,M;UAIHH,a,EACYC,U;;;KALTE,M;AAoIT,eAAeA,MAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../css/Answer.css\";\r\n\r\nfunction Answer() {\r\n  const [\r\n    { questionNum, test, answers, recommended, submit, contactId },\r\n    dispatch,\r\n  ] = useStateValue();\r\n  const history = useHistory();\r\n\r\n  const handleMultiAnswer = (array, i) => {\r\n    if (array[i] === 0) {\r\n      array[i] = 1;\r\n    } else {\r\n      array[i] = 0;\r\n    }\r\n\r\n    return array;\r\n  };\r\n\r\n  const handleEmptyArray = () => {\r\n    let array = [];\r\n    for (let i = 0; i < test.answers[questionNum - 1].options.length; i++) {\r\n      array.push(0);\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const submitRecommended = () => {\r\n    dispatch({ type: \"SUBMIT\" });\r\n    if (recommended !== null) {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    let wait = await submitRecommended();\r\n\r\n    // Change Post URL\r\n    if (contactId && wait) {\r\n      if (sessionStorage.getItem(\"sessionContactId\")) {\r\n        if (sessionStorage.getItem(\"sessionTest\")) {\r\n          axios\r\n            .post(\r\n              `https://scrapthe9to5.com/scripts/IS/ISVaultAssessment.php?assessment=${sessionStorage.getItem(\r\n                \"sessionTest\"\r\n              )}`,\r\n              {\r\n                contactId: sessionStorage.getItem(\"sessionContactId\"),\r\n                recommended: recommended,\r\n                answers: answers,\r\n              }\r\n            )\r\n            .then((res) => {\r\n              console.log(res);\r\n            });\r\n        } else {\r\n          console.log(\"Session test was not recorded...\");\r\n        }\r\n      } else {\r\n        console.log(\"Session contactId was not recorded...\");\r\n      }\r\n    } else {\r\n      console.log(\"Session contactId was not stored...\");\r\n    }\r\n    history.push(\"/result\");\r\n  };\r\n\r\n  useEffect = () => {};\r\n\r\n  return (\r\n    <div className=\"answer\">\r\n      {!submit ? (\r\n        <div className=\"answer-container\">\r\n          {test.answers[questionNum - 1].options.map((option, i) => (\r\n            <div\r\n              key={i}\r\n              onClick={() => {\r\n                // Single Answer Questions\r\n                if (test.answers[questionNum - 1].select === \"single\") {\r\n                  dispatch({ type: \"ANSWER\", answer: i + 1 });\r\n                  dispatch({ type: \"NEXT_QUESTION\" });\r\n                }\r\n\r\n                // Multi Answer Questions\r\n                else if (test.answers[questionNum - 1].select === \"multi\") {\r\n                  let array = answers[questionNum - 1];\r\n\r\n                  // Handle Empty Multi Answer Array\r\n                  if (!array) {\r\n                    array = handleEmptyArray();\r\n                  }\r\n\r\n                  // Handle Multi Answer Array\r\n                  array = handleMultiAnswer(array, i);\r\n\r\n                  // Apply New Answer Array to DataLayer\r\n                  dispatch({\r\n                    type: \"ANSWER\",\r\n                    answer: array,\r\n                  });\r\n                }\r\n              }}\r\n              className={`${\r\n                test.answers[questionNum - 1].select === \"multi\"\r\n                  ? \"answer-optionMulti\"\r\n                  : \"answer-optionSingle\"\r\n              }\r\n              ${\r\n                answers[questionNum - 1]?.length > 1\r\n                  ? answers[questionNum - 1][i] === 1\r\n                    ? \"answer--selected\"\r\n                    : \"\"\r\n                  : answers[questionNum - 1] === i + 1\r\n                  ? \"answer--selected\"\r\n                  : \"\"\r\n              }\r\n              `}\r\n            >\r\n              {option}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n      {submit ? (\r\n        <div className=\"answer-submit\">\r\n          <div onClick={() => handleSubmit()} className=\"answer-submitButton\">\r\n            Submit Answers\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Answer;\r\n"]},"metadata":{},"sourceType":"module"}