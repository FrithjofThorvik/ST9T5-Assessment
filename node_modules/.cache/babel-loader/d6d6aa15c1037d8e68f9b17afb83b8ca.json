{"ast":null,"code":"import { test, courses } from \"./test\"; // DataLayer\n\nexport const initialState = {\n  questionNum: 1,\n  test: test,\n  answers: [],\n  submit: false,\n  recommended: [],\n  activeCourse: null\n};\nconst prevList = [1, 2, 3, 4, 5];\n\nconst filterList = listData => {\n  const newList = listData.list.filter(item => item !== 2);\n  console.log(newList);\n};\n\nfilterList(prevList); // Remove Item From List\n// const removeFromList = (listData, id) => {\n//   const newList = listData.list.filter((item) => item.id !== id);\n//   return newList;\n// };\n// Recommended Courses Filter Logic\n// const filterRecommended = (answers) => {\n//   let recommended = courses;\n//   if (answers[0] === 1) {\n//     recommended = removeFromList(recommended, \"C3\");\n//   } else {\n//     recommended = removeFromList(recommended, \"C2\");\n//   }\n//   if (answers[4] === 2) {\n//     recommended = removeFromList(recommended, \"C1\");\n//   } else {\n//     recommended = removeFromList(recommended, \"C4\");\n//   }\n//   return recommended;\n// };\n// onClick Event Handler\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ANSWER\":\n      state.answers[state.questionNum - 1] = action.answer;\n      return { ...state,\n        answers: state.answers\n      };\n\n    case \"NEXT_QUESTION\":\n      if (state.questionNum === state.test.questions.length) {\n        return { ...state,\n          submit: true,\n          questionNum: state.questionNum + 1\n        };\n      }\n\n      if (state.questionNum > state.test.questions.length) {\n        return state;\n      }\n\n      if (state.answers[state.questionNum - 1] === undefined) {\n        alert(\"Please select an answer before advancing...\");\n        return state;\n      }\n\n      return { ...state,\n        questionNum: state.questionNum + 1\n      };\n\n    case \"PREVIOUS_QUESTION\":\n      if (state.questionNum === 1) {\n        return state;\n      }\n\n      if (state.questionNum > state.test.questions.length) {\n        return { ...state,\n          submit: false,\n          questionNum: state.questionNum - 1\n        };\n      }\n\n      return { ...state,\n        questionNum: state.questionNum - 1\n      };\n    // case \"SUBMIT\":\n    //   let recommended = filterRecommended(state.answers);\n    //   return {\n    //     ...state,\n    //     recommended: recommended,\n    //   };\n\n    case \"COURSE_SELECTED\":\n      return { ...state,\n        activeCourse: action.course\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/frith/Desktop/dev/react/personality/src/configs/reducer.js"],"names":["test","courses","initialState","questionNum","answers","submit","recommended","activeCourse","prevList","filterList","listData","newList","list","filter","item","console","log","reducer","state","action","type","answer","questions","length","undefined","alert","course"],"mappings":"AAAA,SAASA,IAAT,EAAeC,OAAf,QAA8B,QAA9B,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,WAAW,EAAE,CADa;AAE1BH,EAAAA,IAAI,EAAEA,IAFoB;AAG1BI,EAAAA,OAAO,EAAE,EAHiB;AAI1BC,EAAAA,MAAM,EAAE,KAJkB;AAK1BC,EAAAA,WAAW,EAAE,EALa;AAM1BC,EAAAA,YAAY,EAAE;AANY,CAArB;AASP,MAAMC,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAjB;;AACA,MAAMC,UAAU,GAAIC,QAAD,IAAc;AAC/B,QAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAT,CAAcC,MAAd,CAAsBC,IAAD,IAAUA,IAAI,KAAK,CAAxC,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACD,CAHD;;AAIAF,UAAU,CAACD,QAAD,CAAV,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAMS,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACEF,MAAAA,KAAK,CAACd,OAAN,CAAcc,KAAK,CAACf,WAAN,GAAoB,CAAlC,IAAuCgB,MAAM,CAACE,MAA9C;AAEA,aAAO,EACL,GAAGH,KADE;AAELd,QAAAA,OAAO,EAAEc,KAAK,CAACd;AAFV,OAAP;;AAKF,SAAK,eAAL;AACE,UAAIc,KAAK,CAACf,WAAN,KAAsBe,KAAK,CAAClB,IAAN,CAAWsB,SAAX,CAAqBC,MAA/C,EAAuD;AACrD,eAAO,EACL,GAAGL,KADE;AAELb,UAAAA,MAAM,EAAE,IAFH;AAGLF,UAAAA,WAAW,EAAEe,KAAK,CAACf,WAAN,GAAoB;AAH5B,SAAP;AAKD;;AACD,UAAIe,KAAK,CAACf,WAAN,GAAoBe,KAAK,CAAClB,IAAN,CAAWsB,SAAX,CAAqBC,MAA7C,EAAqD;AACnD,eAAOL,KAAP;AACD;;AACD,UAAIA,KAAK,CAACd,OAAN,CAAcc,KAAK,CAACf,WAAN,GAAoB,CAAlC,MAAyCqB,SAA7C,EAAwD;AACtDC,QAAAA,KAAK,CAAC,6CAAD,CAAL;AACA,eAAOP,KAAP;AACD;;AACD,aAAO,EACL,GAAGA,KADE;AAELf,QAAAA,WAAW,EAAEe,KAAK,CAACf,WAAN,GAAoB;AAF5B,OAAP;;AAKF,SAAK,mBAAL;AACE,UAAIe,KAAK,CAACf,WAAN,KAAsB,CAA1B,EAA6B;AAC3B,eAAOe,KAAP;AACD;;AACD,UAAIA,KAAK,CAACf,WAAN,GAAoBe,KAAK,CAAClB,IAAN,CAAWsB,SAAX,CAAqBC,MAA7C,EAAqD;AACnD,eAAO,EACL,GAAGL,KADE;AAELb,UAAAA,MAAM,EAAE,KAFH;AAGLF,UAAAA,WAAW,EAAEe,KAAK,CAACf,WAAN,GAAoB;AAH5B,SAAP;AAKD;;AACD,aAAO,EACL,GAAGe,KADE;AAELf,QAAAA,WAAW,EAAEe,KAAK,CAACf,WAAN,GAAoB;AAF5B,OAAP;AAKF;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAK,iBAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELX,QAAAA,YAAY,EAAEY,MAAM,CAACO;AAFhB,OAAP;;AAKF;AACE,aAAOR,KAAP;AA3DJ;AA6DD,CA9DD;;AAgEA,eAAeD,OAAf","sourcesContent":["import { test, courses } from \"./test\";\r\n\r\n// DataLayer\r\nexport const initialState = {\r\n  questionNum: 1,\r\n  test: test,\r\n  answers: [],\r\n  submit: false,\r\n  recommended: [],\r\n  activeCourse: null,\r\n};\r\n\r\nconst prevList = [1, 2, 3, 4, 5];\r\nconst filterList = (listData) => {\r\n  const newList = listData.list.filter((item) => item !== 2);\r\n  console.log(newList);\r\n};\r\nfilterList(prevList);\r\n\r\n// Remove Item From List\r\n// const removeFromList = (listData, id) => {\r\n//   const newList = listData.list.filter((item) => item.id !== id);\r\n//   return newList;\r\n// };\r\n\r\n// Recommended Courses Filter Logic\r\n// const filterRecommended = (answers) => {\r\n//   let recommended = courses;\r\n//   if (answers[0] === 1) {\r\n//     recommended = removeFromList(recommended, \"C3\");\r\n//   } else {\r\n//     recommended = removeFromList(recommended, \"C2\");\r\n//   }\r\n//   if (answers[4] === 2) {\r\n//     recommended = removeFromList(recommended, \"C1\");\r\n//   } else {\r\n//     recommended = removeFromList(recommended, \"C4\");\r\n//   }\r\n//   return recommended;\r\n// };\r\n\r\n// onClick Event Handler\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ANSWER\":\r\n      state.answers[state.questionNum - 1] = action.answer;\r\n\r\n      return {\r\n        ...state,\r\n        answers: state.answers,\r\n      };\r\n\r\n    case \"NEXT_QUESTION\":\r\n      if (state.questionNum === state.test.questions.length) {\r\n        return {\r\n          ...state,\r\n          submit: true,\r\n          questionNum: state.questionNum + 1,\r\n        };\r\n      }\r\n      if (state.questionNum > state.test.questions.length) {\r\n        return state;\r\n      }\r\n      if (state.answers[state.questionNum - 1] === undefined) {\r\n        alert(\"Please select an answer before advancing...\");\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        questionNum: state.questionNum + 1,\r\n      };\r\n\r\n    case \"PREVIOUS_QUESTION\":\r\n      if (state.questionNum === 1) {\r\n        return state;\r\n      }\r\n      if (state.questionNum > state.test.questions.length) {\r\n        return {\r\n          ...state,\r\n          submit: false,\r\n          questionNum: state.questionNum - 1,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        questionNum: state.questionNum - 1,\r\n      };\r\n\r\n    // case \"SUBMIT\":\r\n    //   let recommended = filterRecommended(state.answers);\r\n    //   return {\r\n    //     ...state,\r\n    //     recommended: recommended,\r\n    //   };\r\n\r\n    case \"COURSE_SELECTED\":\r\n      return {\r\n        ...state,\r\n        activeCourse: action.course,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}