{"ast":null,"code":"import { sfmAssessment, vaultAssessment, sfmAssessmentPaths, vaultAssessmentPaths } from \"./test\"; // DataLayer\n\nexport const initialState = {\n  questionNum: 1,\n  test: null,\n  answers: [],\n  submit: false,\n  contactId: false,\n  recommended: null,\n  activeCourse: null\n}; // Remove Item From List\n\nconst removeFromList = (listData, id) => {\n  const newList = listData.filter(item => item.id !== id);\n  return newList;\n}; // Recommended Paths Filter SFM Logic\n\n\nconst sfmAssessmentRecommendedFilter = answers => {\n  let recommended = sfmAssessmentPaths; // if (answers[0] === 1) {\n  //   recommended = removeFromList(recommended, 1);\n  // }\n\n  if (answers[1] === 1) {\n    recommended = removeFromList(recommended, 2);\n  }\n\n  if (answers[2] === 1) {\n    recommended = removeFromList(recommended, 3);\n  }\n\n  if (answers[3] !== 1) {\n    recommended = removeFromList(recommended, 4);\n  }\n\n  if (answers[4] !== 1) {\n    recommended = removeFromList(recommended, 5);\n  }\n\n  if (answers[4] !== 2) {\n    recommended = removeFromList(recommended, 6);\n  }\n\n  if (answers[4] !== 4) {\n    recommended = removeFromList(recommended, 7);\n  }\n\n  if (answers[4] !== 6) {\n    recommended = removeFromList(recommended, 8);\n  }\n\n  if (answers[5] === 2) {\n    recommended = removeFromList(recommended, 9);\n  }\n\n  if (answers[6] === 1) {\n    recommended = removeFromList(recommended, 10);\n  }\n\n  return recommended;\n}; // Recommended Paths Filter VAULT Logic\n// onClick Event Handler\n\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ANSWER\":\n      state.answers[state.questionNum - 1] = action.answer;\n      return { ...state,\n        answers: state.answers\n      };\n\n    case \"NEXT_QUESTION\":\n      if (state.questionNum === state.test.questions.length) {\n        return { ...state,\n          submit: true,\n          questionNum: state.questionNum + 1\n        };\n      }\n\n      if (state.questionNum > state.test.questions.length) {\n        return state;\n      }\n\n      return { ...state,\n        questionNum: state.questionNum + 1\n      };\n\n    case \"PREVIOUS_QUESTION\":\n      if (state.questionNum === 1) {\n        return state;\n      }\n\n      if (state.questionNum > state.test.questions.length) {\n        return { ...state,\n          submit: false,\n          questionNum: state.questionNum - 1\n        };\n      }\n\n      return { ...state,\n        questionNum: state.questionNum - 1\n      };\n\n    case \"SUBMIT\":\n      let sessionTest = sessionStorage.getItem(\"sessionTest\");\n      let recommended;\n\n      if (sessionTest === \"sfm-assessment\") {\n        recommended = sfmAssessmentRecommendedFilter(state.answers);\n      } else if (sessionTest === \"vault-assessment\") {\n        recommended = sfmAssessmentRecommendedFilter(state.answers);\n      }\n\n      return { ...state,\n        recommended: recommended\n      };\n\n    case \"COURSE_SELECTED\":\n      return { ...state,\n        activeCourse: action.course\n      };\n\n    case \"SET_CONTACT_ID\":\n      return { ...state,\n        contactId: true\n      };\n\n    case \"SET_TEST\":\n      let tempTest;\n\n      if (action.test === \"sfm-assessment\") {\n        tempTest = sfmAssessment;\n      } else if (action.test === \"vault-assessment\") {\n        tempTest = vaultAssessment;\n      }\n\n      return { ...state,\n        test: tempTest\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/frith/Google Drive/Dev/assessment-sfm/src/configs/reducer.js"],"names":["sfmAssessment","vaultAssessment","sfmAssessmentPaths","vaultAssessmentPaths","initialState","questionNum","test","answers","submit","contactId","recommended","activeCourse","removeFromList","listData","id","newList","filter","item","sfmAssessmentRecommendedFilter","reducer","state","action","type","answer","questions","length","sessionTest","sessionStorage","getItem","course","tempTest"],"mappings":"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","sourcesContent":["import {\r\n  sfmAssessment,\r\n  vaultAssessment,\r\n  sfmAssessmentPaths,\r\n  vaultAssessmentPaths,\r\n} from \"./test\";\r\n\r\n// DataLayer\r\nexport const initialState = {\r\n  questionNum: 1,\r\n  test: null,\r\n  answers: [],\r\n  submit: false,\r\n  contactId: false,\r\n  recommended: null,\r\n  activeCourse: null,\r\n};\r\n\r\n// Remove Item From List\r\nconst removeFromList = (listData, id) => {\r\n  const newList = listData.filter((item) => item.id !== id);\r\n  return newList;\r\n};\r\n\r\n// Recommended Paths Filter SFM Logic\r\nconst sfmAssessmentRecommendedFilter = (answers) => {\r\n  let recommended = sfmAssessmentPaths;\r\n  // if (answers[0] === 1) {\r\n  //   recommended = removeFromList(recommended, 1);\r\n  // }\r\n  if (answers[1] === 1) {\r\n    recommended = removeFromList(recommended, 2);\r\n  }\r\n  if (answers[2] === 1) {\r\n    recommended = removeFromList(recommended, 3);\r\n  }\r\n  if (answers[3] !== 1) {\r\n    recommended = removeFromList(recommended, 4);\r\n  }\r\n  if (answers[4] !== 1) {\r\n    recommended = removeFromList(recommended, 5);\r\n  }\r\n  if (answers[4] !== 2) {\r\n    recommended = removeFromList(recommended, 6);\r\n  }\r\n  if (answers[4] !== 4) {\r\n    recommended = removeFromList(recommended, 7);\r\n  }\r\n  if (answers[4] !== 6) {\r\n    recommended = removeFromList(recommended, 8);\r\n  }\r\n  if (answers[5] === 2) {\r\n    recommended = removeFromList(recommended, 9);\r\n  }\r\n  if (answers[6] === 1) {\r\n    recommended = removeFromList(recommended, 10);\r\n  }\r\n  return recommended;\r\n};\r\n\r\n// Recommended Paths Filter VAULT Logic\r\n\r\n// onClick Event Handler\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ANSWER\":\r\n      state.answers[state.questionNum - 1] = action.answer;\r\n\r\n      return {\r\n        ...state,\r\n        answers: state.answers,\r\n      };\r\n\r\n    case \"NEXT_QUESTION\":\r\n      if (state.questionNum === state.test.questions.length) {\r\n        return {\r\n          ...state,\r\n          submit: true,\r\n          questionNum: state.questionNum + 1,\r\n        };\r\n      }\r\n      if (state.questionNum > state.test.questions.length) {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        questionNum: state.questionNum + 1,\r\n      };\r\n\r\n    case \"PREVIOUS_QUESTION\":\r\n      if (state.questionNum === 1) {\r\n        return state;\r\n      }\r\n      if (state.questionNum > state.test.questions.length) {\r\n        return {\r\n          ...state,\r\n          submit: false,\r\n          questionNum: state.questionNum - 1,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        questionNum: state.questionNum - 1,\r\n      };\r\n\r\n    case \"SUBMIT\":\r\n      let sessionTest = sessionStorage.getItem(\"sessionTest\");\r\n      let recommended;\r\n      if (sessionTest === \"sfm-assessment\") {\r\n        recommended = sfmAssessmentRecommendedFilter(state.answers);\r\n      } else if (sessionTest === \"vault-assessment\") {\r\n        recommended = sfmAssessmentRecommendedFilter(state.answers);\r\n      }\r\n      return {\r\n        ...state,\r\n        recommended: recommended,\r\n      };\r\n\r\n    case \"COURSE_SELECTED\":\r\n      return {\r\n        ...state,\r\n        activeCourse: action.course,\r\n      };\r\n\r\n    case \"SET_CONTACT_ID\":\r\n      return {\r\n        ...state,\r\n        contactId: true,\r\n      };\r\n\r\n    case \"SET_TEST\":\r\n      let tempTest;\r\n      if (action.test === \"sfm-assessment\") {\r\n        tempTest = sfmAssessment;\r\n      } else if (action.test === \"vault-assessment\") {\r\n        tempTest = vaultAssessment;\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        test: tempTest,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}