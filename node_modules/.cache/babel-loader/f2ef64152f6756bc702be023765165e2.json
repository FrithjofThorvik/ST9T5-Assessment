{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\frith\\\\Desktop\\\\dev\\\\react\\\\assessment-sfm\\\\src\\\\components\\\\Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Question from \"./Question\";\nimport Answer from \"./Answer\";\nimport Navigator from \"./Navigator\";\nimport { useStateValue } from \"./StateProvider\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../css/Test.css\";\n\nfunction Test({\n  location\n}) {\n  _s();\n\n  const [{\n    contactId\n  }, dispatch] = useStateValue();\n  const history = useHistory();\n  useEffect(() => {\n    var contactId;\n    false ? console.log(\"True\") : console.log(\"False1\");\n    console.log(\"False2\");\n    console.log(\"False3\"); // {!sessionStorage.getItem(\"sessionContactId\")\n    //   ? (\n    //     console.log(\"asdd\");\n    //     console.log(\"asjdalks\");\n    //   ) : dispatch({ type: \"SET_CONTACT_ID\" });}\n    // (\n    //   console.log(\"poppers\");\n    //   // Get all URL Params\n    //   const urlParams = new URLSearchParams(location.search);\n    //   // Get contactId From Params\n    //   if (urlParams.has(\"contactId\")) {\n    //     contactId = +urlParams.get(\"contactId\");\n    //   }\n    //   if (contactId !== NaN && contactId !== undefined) {\n    //     sessionStorage.setItem(\"contactIdSession\", contactId);\n    //   } else {\n    //     console.log(\"üîê contactId is NaN...\");\n    //   }\n    //   // Remove contactId From Params\n    //   urlParams.delete(\"contactId\");\n    //   history.replace({\n    //     search: urlParams.toString(),\n    //   });\n    //   console.log(\"üîê contactId: \", contactId);\n    // );\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-header\",\n        children: \"Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Question, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Answer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Test, \"g+reGMLk89NlBx2DMWAl4paJzU8=\", false, function () {\n  return [useStateValue, useHistory];\n});\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/Users/frith/Desktop/dev/react/assessment-sfm/src/components/Test.js"],"names":["React","useState","useEffect","Question","Answer","Navigator","useStateValue","useHistory","Test","location","contactId","dispatch","history","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,iBAAP;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA4B;AAAA;;AAC1B,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAgBC,QAAhB,IAA4BL,aAAa,EAA/C;AACA,QAAMM,OAAO,GAAGL,UAAU,EAA1B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,SAAJ;AAEA,YAAQG,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAR,GAA8BD,OAAO,CAACC,GAAR,CAAY,QAAZ,CAA9B;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EALc,CAOd;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAjCQ,EAiCN,EAjCM,CAAT;AAmCA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAjDQN,I;UAC2BF,a,EAClBC,U;;;KAFTC,I;AAmDT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Question from \"./Question\";\r\nimport Answer from \"./Answer\";\r\nimport Navigator from \"./Navigator\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../css/Test.css\";\r\n\r\nfunction Test({ location }) {\r\n  const [{ contactId }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    var contactId;\r\n\r\n    false ? console.log(\"True\") : console.log(\"False1\");\r\n    console.log(\"False2\");\r\n    console.log(\"False3\");\r\n\r\n    // {!sessionStorage.getItem(\"sessionContactId\")\r\n    //   ? (\r\n    //     console.log(\"asdd\");\r\n    //     console.log(\"asjdalks\");\r\n    //   ) : dispatch({ type: \"SET_CONTACT_ID\" });}\r\n\r\n    // (\r\n    //   console.log(\"poppers\");\r\n    //   // Get all URL Params\r\n    //   const urlParams = new URLSearchParams(location.search);\r\n    //   // Get contactId From Params\r\n    //   if (urlParams.has(\"contactId\")) {\r\n    //     contactId = +urlParams.get(\"contactId\");\r\n    //   }\r\n    //   if (contactId !== NaN && contactId !== undefined) {\r\n    //     sessionStorage.setItem(\"contactIdSession\", contactId);\r\n    //   } else {\r\n    //     console.log(\"üîê contactId is NaN...\");\r\n    //   }\r\n    //   // Remove contactId From Params\r\n    //   urlParams.delete(\"contactId\");\r\n    //   history.replace({\r\n    //     search: urlParams.toString(),\r\n    //   });\r\n    //   console.log(\"üîê contactId: \", contactId);\r\n    // );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"test\">\r\n      <div className=\"test-container\">\r\n        <div className=\"test-header\">Questions</div>\r\n        <Question />\r\n        <Answer />\r\n        <Navigator />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n"]},"metadata":{},"sourceType":"module"}