{"ast":null,"code":"import { test, courses, vaultAssessment, vaultAssessmentPaths } from \"./test\"; // DataLayer\n\nexport const initialState = {\n  questionNum: 1,\n  // test: test,\n  test: vaultAssessment,\n  answers: [],\n  submit: false,\n  contactId: false,\n  recommended: null,\n  activeCourse: null\n}; // Remove Item From List\n\nconst removeFromList = (listData, id) => {\n  const newList = listData.filter(item => item.id !== id);\n  return newList;\n}; // Recommended Courses Filter Logic\n\n\nconst filterRecommended = answers => {\n  let recommended = courses; // if (answers[0] === 1) {\n  //   recommended = removeFromList(recommended, 1);\n  // }\n\n  if (answers[1] === 1) {\n    recommended = removeFromList(recommended, 2);\n  }\n\n  if (answers[2] === 1) {\n    recommended = removeFromList(recommended, 3);\n  }\n\n  if (answers[3] !== 1) {\n    recommended = removeFromList(recommended, 4);\n  }\n\n  if (answers[4] !== 1) {\n    recommended = removeFromList(recommended, 5);\n  }\n\n  if (answers[4] !== 2) {\n    recommended = removeFromList(recommended, 6);\n  }\n\n  if (answers[4] !== 4) {\n    recommended = removeFromList(recommended, 7);\n  }\n\n  if (answers[4] !== 6) {\n    recommended = removeFromList(recommended, 8);\n  }\n\n  if (answers[5] === 2) {\n    recommended = removeFromList(recommended, 9);\n  }\n\n  if (answers[6] === 1) {\n    recommended = removeFromList(recommended, 10);\n  }\n\n  return recommended;\n}; // Process select type: multi\n\n\nconst answerMulti = (answers, answer) => {\n  console.log(\"🔐 Clicked 2: \", answer);\n\n  if (answers[answer - 1] === 0) {\n    answers[answer - 1] = 1;\n  } else if (answers[answer - 1] === 1) {\n    answers[answer - 1] = 0;\n  }\n\n  return answers;\n}; // onClick Event Handler\n\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ANSWER\":\n      state.answers[state.questionNum - 1] = action.answer;\n      return { ...state,\n        answers: state.answers\n      };\n\n    case \"ANSWER_MULTI\":\n      const index = state.questionNum - 1;\n      const answer = action.answer;\n      let stateAnswers = state.answers;\n      let answers = stateAnswers[index];\n\n      if (!answers) {\n        console.log(\"🔐 Array created!\");\n        answers = new Array(state.test.answers[index].options.length).fill(0);\n      }\n\n      if (answers[answer - 1] === 1) {\n        answers[answer - 1] += 1;\n        console.log(\"Status: Chosen!\");\n      } else if (answers[answer - 1] === 0) {\n        answers[answer - 1] += 1;\n        console.log(\"Status: Not Chosen!\");\n      } // answers = answerMulti(answers, answer);\n\n\n      stateAnswers[index] = answers;\n      return { ...state,\n        answers: stateAnswers\n      };\n\n    case \"NEXT_QUESTION\":\n      if (state.answers[state.questionNum - 1] === undefined) {\n        alert(\"Please select an answer before advancing...\");\n        return state;\n      }\n\n      if (state.questionNum === state.test.questions.length) {\n        return { ...state,\n          submit: true,\n          questionNum: state.questionNum + 1\n        };\n      }\n\n      if (state.questionNum > state.test.questions.length) {\n        return state;\n      }\n\n      return { ...state,\n        questionNum: state.questionNum + 1\n      };\n\n    case \"PREVIOUS_QUESTION\":\n      if (state.questionNum === 1) {\n        return state;\n      }\n\n      if (state.questionNum > state.test.questions.length) {\n        return { ...state,\n          submit: false,\n          questionNum: state.questionNum - 1\n        };\n      }\n\n      return { ...state,\n        questionNum: state.questionNum - 1\n      };\n\n    case \"SUBMIT\":\n      let recommended = filterRecommended(state.answers);\n      return { ...state,\n        recommended: recommended\n      };\n\n    case \"COURSE_SELECTED\":\n      return { ...state,\n        activeCourse: action.course\n      };\n\n    case \"SET_CONTACT_ID\":\n      return { ...state,\n        contactId: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/frith/Desktop/dev/react/assessment-sfm/src/configs/reducer.js"],"names":["test","courses","vaultAssessment","vaultAssessmentPaths","initialState","questionNum","answers","submit","contactId","recommended","activeCourse","removeFromList","listData","id","newList","filter","item","filterRecommended","answerMulti","answer","console","log","reducer","state","action","type","index","stateAnswers","Array","options","length","fill","undefined","alert","questions","course"],"mappings":"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","sourcesContent":["import { test, courses, vaultAssessment, vaultAssessmentPaths } from \"./test\";\r\n\r\n// DataLayer\r\nexport const initialState = {\r\n  questionNum: 1,\r\n  // test: test,\r\n  test: vaultAssessment,\r\n  answers: [],\r\n  submit: false,\r\n  contactId: false,\r\n  recommended: null,\r\n  activeCourse: null,\r\n};\r\n\r\n// Remove Item From List\r\nconst removeFromList = (listData, id) => {\r\n  const newList = listData.filter((item) => item.id !== id);\r\n  return newList;\r\n};\r\n\r\n// Recommended Courses Filter Logic\r\nconst filterRecommended = (answers) => {\r\n  let recommended = courses;\r\n  // if (answers[0] === 1) {\r\n  //   recommended = removeFromList(recommended, 1);\r\n  // }\r\n  if (answers[1] === 1) {\r\n    recommended = removeFromList(recommended, 2);\r\n  }\r\n  if (answers[2] === 1) {\r\n    recommended = removeFromList(recommended, 3);\r\n  }\r\n  if (answers[3] !== 1) {\r\n    recommended = removeFromList(recommended, 4);\r\n  }\r\n  if (answers[4] !== 1) {\r\n    recommended = removeFromList(recommended, 5);\r\n  }\r\n  if (answers[4] !== 2) {\r\n    recommended = removeFromList(recommended, 6);\r\n  }\r\n  if (answers[4] !== 4) {\r\n    recommended = removeFromList(recommended, 7);\r\n  }\r\n  if (answers[4] !== 6) {\r\n    recommended = removeFromList(recommended, 8);\r\n  }\r\n  if (answers[5] === 2) {\r\n    recommended = removeFromList(recommended, 9);\r\n  }\r\n  if (answers[6] === 1) {\r\n    recommended = removeFromList(recommended, 10);\r\n  }\r\n  return recommended;\r\n};\r\n\r\n// Process select type: multi\r\nconst answerMulti = (answers, answer) => {\r\n  console.log(\"🔐 Clicked 2: \", answer);\r\n  if (answers[answer - 1] === 0) {\r\n    answers[answer - 1] = 1;\r\n  } else if (answers[answer - 1] === 1) {\r\n    answers[answer - 1] = 0;\r\n  }\r\n\r\n  return answers;\r\n};\r\n\r\n// onClick Event Handler\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ANSWER\":\r\n      state.answers[state.questionNum - 1] = action.answer;\r\n\r\n      return {\r\n        ...state,\r\n        answers: state.answers,\r\n      };\r\n\r\n    case \"ANSWER_MULTI\":\r\n      const index = state.questionNum - 1;\r\n      const answer = action.answer;\r\n\r\n      let stateAnswers = state.answers;\r\n      let answers = stateAnswers[index];\r\n\r\n      if (!answers) {\r\n        console.log(\"🔐 Array created!\");\r\n        answers = new Array(state.test.answers[index].options.length).fill(0);\r\n      }\r\n\r\n      if (answers[answer - 1] === 1) {\r\n        answers[answer - 1] += 1;\r\n        console.log(\"Status: Chosen!\");\r\n      } else if (answers[answer - 1] === 0) {\r\n        answers[answer - 1] += 1;\r\n        console.log(\"Status: Not Chosen!\");\r\n      }\r\n\r\n      // answers = answerMulti(answers, answer);\r\n      stateAnswers[index] = answers;\r\n\r\n      return {\r\n        ...state,\r\n        answers: stateAnswers,\r\n      };\r\n\r\n    case \"NEXT_QUESTION\":\r\n      if (state.answers[state.questionNum - 1] === undefined) {\r\n        alert(\"Please select an answer before advancing...\");\r\n        return state;\r\n      }\r\n      if (state.questionNum === state.test.questions.length) {\r\n        return {\r\n          ...state,\r\n          submit: true,\r\n          questionNum: state.questionNum + 1,\r\n        };\r\n      }\r\n      if (state.questionNum > state.test.questions.length) {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        questionNum: state.questionNum + 1,\r\n      };\r\n\r\n    case \"PREVIOUS_QUESTION\":\r\n      if (state.questionNum === 1) {\r\n        return state;\r\n      }\r\n      if (state.questionNum > state.test.questions.length) {\r\n        return {\r\n          ...state,\r\n          submit: false,\r\n          questionNum: state.questionNum - 1,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        questionNum: state.questionNum - 1,\r\n      };\r\n\r\n    case \"SUBMIT\":\r\n      let recommended = filterRecommended(state.answers);\r\n      return {\r\n        ...state,\r\n        recommended: recommended,\r\n      };\r\n\r\n    case \"COURSE_SELECTED\":\r\n      return {\r\n        ...state,\r\n        activeCourse: action.course,\r\n      };\r\n\r\n    case \"SET_CONTACT_ID\":\r\n      return {\r\n        ...state,\r\n        contactId: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}