{"ast":null,"code":"import { test } from \"./test\";\nexport const initialState = {\n  questionNum: 1,\n  test: test,\n  answers: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ANSWER\":\n      let newAnswer = [...state.answers];\n      return { ...state,\n        answers: state.answers\n      };\n\n    case \"NEXT_QUESTION\":\n      if (state.questionNum == state.test.questions.length) {\n        return state;\n      }\n\n      if (!state.answers[state.questionNum - 1]) {\n        console.warn();\n      }\n\n      return { ...state,\n        questionNum: state.questionNum + 1\n      };\n\n    case \"PREVIOUS_QUESTION\":\n      if (state.questionNum <= 1) {\n        return state;\n      }\n\n      return { ...state,\n        questionNum: state.questionNum - 1\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/frith/Desktop/dev/react/personality/src/configs/reducer.js"],"names":["test","initialState","questionNum","answers","reducer","state","action","type","newAnswer","questions","length","console","warn"],"mappings":"AAAA,SAASA,IAAT,QAAqB,QAArB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,WAAW,EAAE,CADa;AAE1BF,EAAAA,IAAI,EAAEA,IAFoB;AAG1BG,EAAAA,OAAO,EAAE;AAHiB,CAArB;;AAMP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACE,UAAIC,SAAS,GAAG,CAAC,GAAGH,KAAK,CAACF,OAAV,CAAhB;AAEA,aAAO,EACL,GAAGE,KADE;AAELF,QAAAA,OAAO,EAAEE,KAAK,CAACF;AAFV,OAAP;;AAIF,SAAK,eAAL;AACE,UAAIE,KAAK,CAACH,WAAN,IAAqBG,KAAK,CAACL,IAAN,CAAWS,SAAX,CAAqBC,MAA9C,EAAsD;AACpD,eAAOL,KAAP;AACD;;AACD,UAAI,CAACA,KAAK,CAACF,OAAN,CAAcE,KAAK,CAACH,WAAN,GAAoB,CAAlC,CAAL,EAA2C;AACzCS,QAAAA,OAAO,CAACC,IAAR;AACD;;AACD,aAAO,EACL,GAAGP,KADE;AAELH,QAAAA,WAAW,EAAEG,KAAK,CAACH,WAAN,GAAoB;AAF5B,OAAP;;AAKF,SAAK,mBAAL;AACE,UAAIG,KAAK,CAACH,WAAN,IAAqB,CAAzB,EAA4B;AAC1B,eAAOG,KAAP;AACD;;AACD,aAAO,EACL,GAAGA,KADE;AAELH,QAAAA,WAAW,EAAEG,KAAK,CAACH,WAAN,GAAoB;AAF5B,OAAP;;AAKF;AACE,aAAOG,KAAP;AA9BJ;AAgCD,CAjCD;;AAmCA,eAAeD,OAAf","sourcesContent":["import { test } from \"./test\";\r\n\r\nexport const initialState = {\r\n  questionNum: 1,\r\n  test: test,\r\n  answers: [],\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ANSWER\":\r\n      let newAnswer = [...state.answers];\r\n\r\n      return {\r\n        ...state,\r\n        answers: state.answers,\r\n      };\r\n    case \"NEXT_QUESTION\":\r\n      if (state.questionNum == state.test.questions.length) {\r\n        return state;\r\n      }\r\n      if (!state.answers[state.questionNum - 1]) {\r\n        console.warn();\r\n      }\r\n      return {\r\n        ...state,\r\n        questionNum: state.questionNum + 1,\r\n      };\r\n\r\n    case \"PREVIOUS_QUESTION\":\r\n      if (state.questionNum <= 1) {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        questionNum: state.questionNum - 1,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}