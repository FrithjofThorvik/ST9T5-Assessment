{"ast":null,"code":"import { test } from \"./test\";\nexport const initialState = {\n  questionNum: 1,\n  test: test,\n  answers: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ANSWER\":\n      console.log(state.answers);\n      let newAnswer = [state.answers];\n      newAnswer[state.questionNum - 1] = action.answer;\n      return { ...state,\n        answers: newAnswer\n      };\n\n    case \"NEXT_QUESTION\":\n      if (state.questionNum == state.test.questions.length) {\n        return state;\n      }\n\n      if (!state.answers[state.questionNum - 1]) {\n        console.warn(\"Please select an answer before advancing!\");\n      }\n\n      return { ...state,\n        questionNum: state.questionNum + 1\n      };\n\n    case \"PREVIOUS_QUESTION\":\n      if (state.questionNum <= 1) {\n        return state;\n      }\n\n      return { ...state,\n        questionNum: state.questionNum - 1\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/frith/Desktop/dev/react/personality/src/configs/reducer.js"],"names":["test","initialState","questionNum","answers","reducer","state","action","type","console","log","newAnswer","answer","questions","length","warn"],"mappings":"AAAA,SAASA,IAAT,QAAqB,QAArB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,WAAW,EAAE,CADa;AAE1BF,EAAAA,IAAI,EAAEA,IAFoB;AAG1BG,EAAAA,OAAO,EAAE;AAHiB,CAArB;;AAMP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACF,OAAlB;AACA,UAAIO,SAAS,GAAG,CAACL,KAAK,CAACF,OAAP,CAAhB;AACAO,MAAAA,SAAS,CAACL,KAAK,CAACH,WAAN,GAAoB,CAArB,CAAT,GAAmCI,MAAM,CAACK,MAA1C;AACA,aAAO,EACL,GAAGN,KADE;AAELF,QAAAA,OAAO,EAAEO;AAFJ,OAAP;;AAKF,SAAK,eAAL;AACE,UAAIL,KAAK,CAACH,WAAN,IAAqBG,KAAK,CAACL,IAAN,CAAWY,SAAX,CAAqBC,MAA9C,EAAsD;AACpD,eAAOR,KAAP;AACD;;AACD,UAAI,CAACA,KAAK,CAACF,OAAN,CAAcE,KAAK,CAACH,WAAN,GAAoB,CAAlC,CAAL,EAA2C;AACzCM,QAAAA,OAAO,CAACM,IAAR,CAAa,2CAAb;AACD;;AACD,aAAO,EACL,GAAGT,KADE;AAELH,QAAAA,WAAW,EAAEG,KAAK,CAACH,WAAN,GAAoB;AAF5B,OAAP;;AAKF,SAAK,mBAAL;AACE,UAAIG,KAAK,CAACH,WAAN,IAAqB,CAAzB,EAA4B;AAC1B,eAAOG,KAAP;AACD;;AACD,aAAO,EACL,GAAGA,KADE;AAELH,QAAAA,WAAW,EAAEG,KAAK,CAACH,WAAN,GAAoB;AAF5B,OAAP;;AAKF;AACE,aAAOG,KAAP;AAhCJ;AAkCD,CAnCD;;AAqCA,eAAeD,OAAf","sourcesContent":["import { test } from \"./test\";\r\n\r\nexport const initialState = {\r\n  questionNum: 1,\r\n  test: test,\r\n  answers: [],\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ANSWER\":\r\n      console.log(state.answers);\r\n      let newAnswer = [state.answers];\r\n      newAnswer[state.questionNum - 1] = action.answer;\r\n      return {\r\n        ...state,\r\n        answers: newAnswer,\r\n      };\r\n\r\n    case \"NEXT_QUESTION\":\r\n      if (state.questionNum == state.test.questions.length) {\r\n        return state;\r\n      }\r\n      if (!state.answers[state.questionNum - 1]) {\r\n        console.warn(\"Please select an answer before advancing!\");\r\n      }\r\n      return {\r\n        ...state,\r\n        questionNum: state.questionNum + 1,\r\n      };\r\n\r\n    case \"PREVIOUS_QUESTION\":\r\n      if (state.questionNum <= 1) {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        questionNum: state.questionNum - 1,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}