{"ast":null,"code":"import { test } from \"./test\";\nexport const initialState = {\n  questionNum: 1,\n  test: test,\n  answers: [],\n  submit: false\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ANSWER\":\n      state.answers[state.questionNum - 1] = action.answer;\n      return { ...state,\n        answers: state.answers\n      };\n\n    case \"NEXT_QUESTION\":\n      if (state.questionNum === state.test.questions.length) {\n        return { ...state,\n          submit: true,\n          questionNum: state.questionNum + 1\n        };\n      }\n\n      if (state.questionNum > state.test.questions.length) {\n        return state;\n      }\n\n      if (state.answers[state.questionNum - 1] === undefined) {\n        alert(\"Please select an answer before advancing...\");\n        return state;\n      }\n\n      return { ...state,\n        questionNum: state.questionNum + 1\n      };\n\n    case \"PREVIOUS_QUESTION\":\n      if (state.questionNum <= 1) {\n        return state;\n      }\n\n      if (state.questionNum === state.test.questions.length) {\n        return { ...state,\n          submit: false,\n          questionNum: state.questionNum - 1\n        };\n      }\n\n      return { ...state,\n        questionNum: state.questionNum - 1\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/frith/Desktop/dev/react/personality/src/configs/reducer.js"],"names":["test","initialState","questionNum","answers","submit","reducer","state","action","type","answer","questions","length","undefined","alert"],"mappings":"AAAA,SAASA,IAAT,QAAqB,QAArB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,WAAW,EAAE,CADa;AAE1BF,EAAAA,IAAI,EAAEA,IAFoB;AAG1BG,EAAAA,OAAO,EAAE,EAHiB;AAI1BC,EAAAA,MAAM,EAAE;AAJkB,CAArB;;AAOP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACEF,MAAAA,KAAK,CAACH,OAAN,CAAcG,KAAK,CAACJ,WAAN,GAAoB,CAAlC,IAAuCK,MAAM,CAACE,MAA9C;AAEA,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,OAAO,EAAEG,KAAK,CAACH;AAFV,OAAP;;AAKF,SAAK,eAAL;AACE,UAAIG,KAAK,CAACJ,WAAN,KAAsBI,KAAK,CAACN,IAAN,CAAWU,SAAX,CAAqBC,MAA/C,EAAuD;AACrD,eAAO,EACL,GAAGL,KADE;AAELF,UAAAA,MAAM,EAAE,IAFH;AAGLF,UAAAA,WAAW,EAAEI,KAAK,CAACJ,WAAN,GAAoB;AAH5B,SAAP;AAKD;;AACD,UAAII,KAAK,CAACJ,WAAN,GAAoBI,KAAK,CAACN,IAAN,CAAWU,SAAX,CAAqBC,MAA7C,EAAqD;AACnD,eAAOL,KAAP;AACD;;AACD,UAAIA,KAAK,CAACH,OAAN,CAAcG,KAAK,CAACJ,WAAN,GAAoB,CAAlC,MAAyCU,SAA7C,EAAwD;AACtDC,QAAAA,KAAK,CAAC,6CAAD,CAAL;AACA,eAAOP,KAAP;AACD;;AACD,aAAO,EACL,GAAGA,KADE;AAELJ,QAAAA,WAAW,EAAEI,KAAK,CAACJ,WAAN,GAAoB;AAF5B,OAAP;;AAKF,SAAK,mBAAL;AACE,UAAII,KAAK,CAACJ,WAAN,IAAqB,CAAzB,EAA4B;AAC1B,eAAOI,KAAP;AACD;;AACD,UAAIA,KAAK,CAACJ,WAAN,KAAsBI,KAAK,CAACN,IAAN,CAAWU,SAAX,CAAqBC,MAA/C,EAAuD;AACrD,eAAO,EACL,GAAGL,KADE;AAELF,UAAAA,MAAM,EAAE,KAFH;AAGLF,UAAAA,WAAW,EAAEI,KAAK,CAACJ,WAAN,GAAoB;AAH5B,SAAP;AAKD;;AACD,aAAO,EACL,GAAGI,KADE;AAELJ,QAAAA,WAAW,EAAEI,KAAK,CAACJ,WAAN,GAAoB;AAF5B,OAAP;;AAKF;AACE,aAAOI,KAAP;AA9CJ;AAgDD,CAjDD;;AAmDA,eAAeD,OAAf","sourcesContent":["import { test } from \"./test\";\r\n\r\nexport const initialState = {\r\n  questionNum: 1,\r\n  test: test,\r\n  answers: [],\r\n  submit: false,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ANSWER\":\r\n      state.answers[state.questionNum - 1] = action.answer;\r\n\r\n      return {\r\n        ...state,\r\n        answers: state.answers,\r\n      };\r\n\r\n    case \"NEXT_QUESTION\":\r\n      if (state.questionNum === state.test.questions.length) {\r\n        return {\r\n          ...state,\r\n          submit: true,\r\n          questionNum: state.questionNum + 1,\r\n        };\r\n      }\r\n      if (state.questionNum > state.test.questions.length) {\r\n        return state;\r\n      }\r\n      if (state.answers[state.questionNum - 1] === undefined) {\r\n        alert(\"Please select an answer before advancing...\");\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        questionNum: state.questionNum + 1,\r\n      };\r\n\r\n    case \"PREVIOUS_QUESTION\":\r\n      if (state.questionNum <= 1) {\r\n        return state;\r\n      }\r\n      if (state.questionNum === state.test.questions.length) {\r\n        return {\r\n          ...state,\r\n          submit: false,\r\n          questionNum: state.questionNum - 1,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        questionNum: state.questionNum - 1,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}